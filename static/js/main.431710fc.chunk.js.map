{"version":3,"sources":["components/app/app.module.css","components/burger-ingredients/ingredient-details/ingredient-details.module.css","components/modal/modal-overlay/modal-overlay.module.css","pages/main/main.module.css","components/burger-ingredients/burger-ingredients.module.css","components/orders-stats/orders-stats.module.css","components/app-Header/app-Header.tsx","utils/cookie.ts","services/api.ts","services/auth/constants.ts","services/auth/action-type.ts","services/auth/actions.ts","types/hooks.ts","hooks/useAuth.tsx","components/routes/protected-route.tsx","services/ingredient/constants.ts","services/ingredient/actions.ts","services/ingredient/action-type.ts","components/burger-ingredients/ingredient-details/ingredient-details.tsx","services/order/constants.ts","services/order/action-type.ts","services/order/actions.ts","utils/formatDate.ts","components/orders-feed/feed-orders-detalis/feed-order-details.tsx","types/data.ts","components/modal/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","components/burger-ingredients/modal-ingredient.tsx","components/orders-feed/modal-feed-order.tsx","components/routes/redirect-auth-route.tsx","services/reset-password/constants.ts","services/reset-password/actions.ts","services/reset-password/action-type.ts","components/form/form.tsx","pages/forgot-password.tsx","pages/login.tsx","components/burger-ingredients/burger-item/burger-item.tsx","components/burger-ingredients/burger-items/burger-items.tsx","components/burger-ingredients/burger-ingredients.tsx","services/burger-component/constants.ts","components/burger-components/order-details/order-details.tsx","components/burger-components/component-item/component-item.tsx","components/burger-components/burger-components.tsx","pages/main/main-page.tsx","services/profile/constants.ts","services/profile/actions.ts","services/profile/action-type.ts","components/profile/profile.tsx","pages/profile/profile.tsx","pages/registration.tsx","pages/reset-password.tsx","services/websoket/constants.ts","components/orders-feed/images/images.tsx","utils/statusOrder.ts","components/orders-feed/orders-feed.tsx","pages/orders/order.tsx","services/websoket/socketMiddleware.ts","pages/page-not-found/page-not-found.tsx","components/orders-stats/orders-stats.tsx","pages/feed/feed.tsx","components/app/app.tsx","reportWebVitals.ts","services/inital-data.ts","services/root-reducer.ts","services/ingredient/reducers.ts","services/burger-component/reducers.ts","services/order/reducers.ts","services/auth/reducers.ts","services/reset-password/reducers.ts","services/profile/reducers.ts","services/websoket/redusers.ts","services/store.ts","index.tsx","components/orders-feed/feed-orders-detalis/feed-order-details.module.css","components/orders-feed/images/images.module.css","components/app-Header/header.module.css","components/orders-feed/orders-feed.module.css","components/burger-ingredients/burger-items/burger-items.module.css","pages/feed/feed.module.css","components/burger-ingredients/burger-item/burger-item.module.css","components/burger-components/burger-components.module.css","components/modal/modal.module.css","components/form/form.module.css","components/burger-components/order-details/order-details.module.css","pages/profile/profile.module.css","components/profile/profile.module.css","pages/orders/orders.module.css","pages/page-not-found/page-not-found.module.css"],"names":["module","exports","AppHeader","loginLink","useRouteMatch","isLoginPage","path","className","style","header","nav","exact","to","iconText","activeStyle","color","type","logo","text_color_active","getCookie","name","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","setCookie","value","props","exp","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","deleteCookie","urlApi","getData","url","params","a","fetch","res","status","Error","statusText","json","success","getIngredients","result","getOrder","numberOrder","sendOrder","idIngredients","idBun","token","method","headers","Authorization","body","JSON","stringify","ingredients","registration","URLSearchParams","email","password","authorization","logOut","forgotPassword","resetPassword","updateProfile","getUser","getNewAccessToken","GET_REG_SUCCESS","GET_REG_FAILED","GET_AUTH_SUCCESS","GET_AUTH_FAILED","RESTORE_USER_SUCCESS","RESTORE_USER_FAILED","LOGOUT_SUCCESS","LOGOUT_FAILED","getRegSuccessAction","accessToken","refreshToken","getAuthSuccessAction","logoutSuccessAction","registrationUser","dispatch","fetchReg","split","user","catch","authUser","fetchAuth","logOutUser","fetchOut","restoreUser","fetchRestore","useDispatch","dispatchHook","useSelector","selectorHook","useAuth","useState","hasError","setError","store","auth","isLoadedUser","setIsLoadedUser","useEffect","saveUser","getToken","newAccessToken","then","ProtectedRoute","children","rest","location","useLocation","render","pathname","state","from","GET_INGREDIENT_SUCCESS","GET_INGREDIENT_REQUEST","GET_INGREDIENT_FAILED","loadIngredients","fetchIngredients","data","IngredientDetails","id","useParams","ingredient","currentIngredient","find","x","_id","length","src","image_large","alt","energy","calories","proteins","fat","carbohydrates","SEND_ORDER_SUCCESS","SEND_ORDER_REQUEST","SEND_ORDER_FAILED","CONFIRM_ORDER","GET_ORDER_SUCCESS","GET_ORDER_REQUEST","GET_ORDER_FAILED","SendOrderSuccessAction","order","orderSend","fetchOrder","loadOrder","orders","getFormattedDate","isToday","format","locale","ru","isYesterday","formatDistance","now","EStatus","FeedOrderDetails","message","messages","orderState","currentOrder","number","parseInt","orderIngredientsId","orderIngredients","filter","some","y","count","reduce","acc","el","totalPrice","total","curr","price","styles","wrap","map","row","imgPrew","img","image_mobile","footer","createdAt","ModalOverlay","onClick","overlay","Modal","isOpen","onCloseClick","title","onKeydown","e","code","addEventListener","removeEventListener","ReactDOM","createPortal","modal","stopPropagation","getElementById","ModalIngredient","history","useHistory","handleClick","goBack","ModalOrderFeed","RedirectAuthRoute","redirect","FORGOT_SUCCESS","FORGOT_FAILED","RESET_SUCCESS","RESET_FAILED","CLEAR_RESET_PASSWORD","forgotPasswordUser","fetchForgot","resetPasswordUser","fetchReset","Form","onSubmit","idButton","button","setAttribute","wrapper","form","ForgotPasswordPage","setValue","isRecoverEmail","preventDefault","placeholder","onChange","target","size","LoginPage","isPasswordShow","setIsPasswordShow","isError","setIsError","isSubmitted","setIsSubmited","error","errorText","icon","onIconClick","BurgerItem","component","components","bun","useDrag","item","collect","monitor","opacity","isDragging","dragRef","counter","ref","link","burgerBlock","image","BurgerItems","ingredientRef","bunsAncor","saucesAncor","mainsAncor","buns","mains","sauces","productList","BurgerIngredients","current","setCurrent","useRef","handleScroll","positionScroll","getBoundingClientRect","top","positionMains","positionSauces","passive","productPanel","display","active","scrollIntoView","behavior","ADD_COMPONENT","DEL_COMPONENT","UPDATE_COMPONENT","CLEAR_COMPONENTS","OrderDetails","isLoadingOrder","light","ComponentItem","index","moveListItem","useDrop","accept","hover","dragIndex","hoverIndex","hoverBoundingRect","hoverMiddleY","bottom","hoverActualY","getClientOffset","dropRef","text","thumbnail","handleClose","BurgerComponents","totalSum","confirmOrder","isOpenModal","setIsOpenModal","drop","useCallback","panel","isLocked","componentList","key","alert","MainPage","isLoadingIngredient","hasErrorIngredient","main","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_FAILED","updateProfileUser","fetchUpdateProfile","Profile","disabled","setDisabled","isSaveVisible","setisSaveVisible","newValue","ProfilePage","itemsProfile","Order","RegistrationPage","ResetPasswordPage","isResetPassword","setTimeout","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_MESSAGE","Images","countTake","countRest","showCount","mainIngridients","slice","getImageForElement","elementWithCount","maxElemImgs","images","imgOverlay","generateKey","formatStatusOrder","Created","Done","Pending","OrdersFeed","arr","forEach","i","sort","b","setOrders","withToken","orderWrap","wsUrl","wsActions","PageNotFound","OrdersStats","totalDay","doneOrders","inWorkOrders","getAggregate","cur","push","curArr","doneOrdersAggregate","inWorkOrdersAggregate","ordersColumn","rowWrap","columnArr","columnWrap","listColumn","doneNumber","FeedPage","setTotal","setTotalDay","totalToday","stats","App","isModal","action","DndProvider","backend","HTML5Backend","app","prevPath","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","hasErrorOrder","wsConnected","rootReducer","combineReducers","newComponents","splice","dragItem","console","log","profile","payload","wsInit","onOpen","onClose","onError","onMessage","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunkMiddleware","socket","next","accessCookie","WebSocket","onopen","event","onerror","onmessage","parsedData","parse","onclose","createStore","initStore","StrictMode"],"mappings":"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","file":"static/js/main.431710fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__1mI_J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"energy\":\"ingredient-details_energy__GFO8C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal-overlay_overlay__BhP7i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__11h7T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"productPanel\":\"burger-ingredients_productPanel__oxR0e\",\"overlay\":\"burger-ingredients_overlay__yKRpT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"orders-stats_wrap__2i-RD\",\"orders\":\"orders-stats_orders__3mF8P\",\"doneNumber\":\"orders-stats_doneNumber__3EVHh\",\"ordersColumn\":\"orders-stats_ordersColumn__2lpQ4\",\"count\":\"orders-stats_count__3aLiN\",\"rowWrap\":\"orders-stats_rowWrap__RFd21\",\"columnWrap\":\"orders-stats_columnWrap__G1YLr\",\"listColumn\":\"orders-stats_listColumn__2haky\"};","import style from './header.module.css';\r\nimport { NavLink, useRouteMatch, Link } from 'react-router-dom';\r\nimport {\r\n  Logo,\r\n  BurgerIcon,\r\n  ListIcon,\r\n  ProfileIcon,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nconst AppHeader: React.FC = () => {\r\n  const loginLink = useRouteMatch('/login');\r\n  const isLoginPage = loginLink && loginLink.path === '/login';\r\n\r\n  return (\r\n    <header className={style.header}>\r\n      <nav className={style.nav}>\r\n        <NavLink\r\n          exact\r\n          to=\"/\"\r\n          className={`pl-5 mr-2 text text_type_main-default text_color_inactive ${style.iconText}`}\r\n          activeStyle={{ color: 'white' }}\r\n        >\r\n          <BurgerIcon type=\"primary\" />\r\n          <span className=\"pl-2\">Конструктор</span>\r\n        </NavLink>\r\n\r\n        <NavLink\r\n          exact\r\n          to=\"/feed\"\r\n          className={`pl-5 mr-2 text text_type_main-default text_color_inactive ${style.iconText}`}\r\n          activeStyle={{ color: 'white' }}\r\n        >\r\n          <ListIcon type=\"secondary\" />\r\n          <span className=\"pl-2\">Лента заказов</span>\r\n        </NavLink>\r\n      </nav>\r\n      <Link to=\"/\">\r\n        <span className={style.logo}>\r\n          <Logo />\r\n        </span>\r\n      </Link>\r\n      <NavLink\r\n        to={'/profile'}\r\n        className={`text text_type_main-default\r\n                    ${\r\n                      isLoginPage\r\n                        ? style.text_color_active\r\n                        : 'text_color_inactive'\r\n                    } \r\n                    ${style.iconText}`}\r\n        activeStyle={{ color: 'white' }}\r\n      >\r\n        <ProfileIcon type=\"secondary\" />\r\n        <span className=\"pl-2\">Личный кабинет</span>\r\n      </NavLink>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","export function getCookie(name: string) {\r\n  const matches = document.cookie.match(\r\n    new RegExp(\r\n      '(?:^|; )' +\r\n        name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') +\r\n        '=([^;]*)'\r\n    )\r\n  );\r\n  return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n\r\nexport function setCookie(name: string, value: string | null, props?: any) {\r\n  props = props || {};\r\n  let exp = props.expires;\r\n  if (typeof exp == 'number' && exp) {\r\n    const d = new Date();\r\n    d.setTime(d.getTime() + exp * 1000);\r\n    exp = props.expires = d;\r\n  }\r\n  if (exp && exp.toUTCString) {\r\n    props.expires = exp.toUTCString();\r\n  }\r\n  value = encodeURIComponent(value as string);\r\n  let updatedCookie = name + '=' + value;\r\n  for (const propName in props) {\r\n    updatedCookie += '; ' + propName;\r\n    const propValue = props[propName];\r\n    if (propValue !== true) {\r\n      updatedCookie += '=' + propValue;\r\n    }\r\n  }\r\n  document.cookie = updatedCookie;\r\n}\r\n\r\nexport function deleteCookie(name: string) {\r\n  setCookie(name, null, { expires: -1 });\r\n}\r\n","import { TUser } from '../types/data';\r\n\r\nconst urlApi = 'https://norma.nomoreparties.space/api/';\r\nconst getData = async (url: string, params?: RequestInit) => {\r\n  const res = await fetch(url, params);\r\n  if (res.status !== 200) {\r\n    throw new Error(res.statusText);\r\n  }\r\n  const json = await res.json();\r\n  if (json.success === true) {\r\n    return json;\r\n  } else {\r\n    throw new Error(res.statusText);\r\n  }\r\n};\r\n\r\nexport const getIngredients = async () => {\r\n  const url = urlApi + 'ingredients';\r\n  const result = await getData(url);\r\n  return result;\r\n};\r\n\r\nexport const getOrder = async (numberOrder: string) => {\r\n  const url = urlApi + 'orders/' + numberOrder;\r\n  const result = await getData(url);\r\n  return result;\r\n};\r\n\r\nexport const sendOrder = async (\r\n  idIngredients: readonly string[],\r\n  idBun: string,\r\n  token: string\r\n) => {\r\n  const url = urlApi + 'orders';\r\n  const result = await getData(url, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json;charset=utf-8', \r\n    Authorization:  'Bearer ' + token,\r\n  },\r\n    body: JSON.stringify({\r\n      ingredients: [...idIngredients, idBun],\r\n    }),\r\n  });\r\n  return result;\r\n};\r\n\r\nexport const registration = async (value: TUser) => {\r\n  const url = urlApi + 'auth/register';\r\n  const result = await getData(url, {\r\n    method: 'POST',\r\n    body: new URLSearchParams({\r\n      email: value.email,\r\n      password: value.password,\r\n      name: value.name,\r\n    }),\r\n  });\r\n  return result;\r\n};\r\n\r\nexport const authorization = async (\r\n  value: Pick<TUser, 'email' | 'password'>\r\n) => {\r\n  const url = urlApi + 'auth/login';\r\n  const result = await getData(url, {\r\n    method: 'POST',\r\n    body: new URLSearchParams({\r\n      email: value.email,\r\n      password: value.password,\r\n    }),\r\n  });\r\n  return result;\r\n};\r\n\r\nexport const logOut = async (token: string) => {\r\n  const url = urlApi + 'auth/logout';\r\n  const result = await getData(url, {\r\n    method: 'POST',\r\n    body: new URLSearchParams({\r\n      token: token,\r\n    }),\r\n  });\r\n  return result;\r\n};\r\n\r\nexport const forgotPassword = async (email: string) => {\r\n  const url = urlApi + 'password-reset';\r\n  const result = await getData(url, {\r\n    method: 'POST',\r\n    body: new URLSearchParams({\r\n      email: email,\r\n    }),\r\n  });\r\n  return result;\r\n};\r\n\r\nexport const resetPassword = async (password: string, token: string) => {\r\n  const url = urlApi + 'password-reset/reset';\r\n  const result = await getData(url, {\r\n    method: 'POST',\r\n    body: new URLSearchParams({\r\n      password: password,\r\n      token: token,\r\n    }),\r\n  });\r\n  return result;\r\n};\r\n\r\nexport const updateProfile = async (value: Partial<TUser>, token: string) => {\r\n  const url = urlApi + 'auth/user';\r\n  \r\n  const result = await getData(url, {\r\n    method: 'PATCH',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: 'Bearer ' + token,\r\n    },\r\n    body: JSON.stringify(value),\r\n  });\r\n  return result;\r\n};\r\n\r\nexport const getUser = async (token: string) => {\r\n  const url = urlApi + 'auth/user';\r\n  const result = await getData(url, {\r\n    method: 'GET',\r\n    headers: {\r\n      Authorization: 'Bearer ' + token,\r\n    },\r\n  });\r\n  return result;\r\n};\r\n\r\nexport const getNewAccessToken = async (token: string) => {\r\n  const url = urlApi + 'auth/token';\r\n  const result = await getData(url, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json;charset=utf-8',\r\n    },\r\n    body: JSON.stringify({ token }),\r\n  });\r\n  return result;\r\n};\r\n","export const GET_REG_SUCCESS: 'GET_REG_SUCCESS' = 'GET_REG_SUCCESS';\r\nexport const GET_REG_FAILED: 'GET_REG_FAILED' = 'GET_REG_FAILED';\r\n\r\nexport const GET_AUTH_SUCCESS:  'GET_AUTH_SUCCESS' = 'GET_AUTH_SUCCESS';\r\nexport const GET_AUTH_FAILED: 'GET_AUTH_FAILED' = 'GET_AUTH_FAILED';\r\n\r\nexport const RESTORE_USER_SUCCESS: 'RESTORE_USER_SUCCESS' = 'RESTORE_USER_SUCCESS';\r\nexport const RESTORE_USER_FAILED: 'RESTORE_USER_FAILED' = 'RESTORE_USER_FAILED';\r\n\r\nexport const LOGOUT_SUCCESS: 'LOGOUT_SUCCESS' = 'LOGOUT_SUCCESS';\r\nexport const LOGOUT_FAILED: 'LOGOUT_FAILED' = 'LOGOUT_FAILED';","import { TUser } from '../../types/data';\r\nimport {\r\n  GET_REG_SUCCESS,\r\n  GET_REG_FAILED,\r\n  GET_AUTH_SUCCESS,\r\n  GET_AUTH_FAILED,\r\n  LOGOUT_SUCCESS,\r\n  LOGOUT_FAILED,\r\n  RESTORE_USER_SUCCESS,\r\n  RESTORE_USER_FAILED\r\n} from './constants';\r\n\r\nexport interface IRestoreUserSuccess{\r\n    readonly type: typeof  RESTORE_USER_SUCCESS,\r\n    user: TUser;\r\n}\r\n\r\nexport interface IRestoreUserFailed{\r\n  readonly type: typeof  RESTORE_USER_FAILED;\r\n}\r\n\r\nexport interface IGetRegSuccess {\r\n  readonly type: typeof GET_REG_SUCCESS;\r\n  accessToken: string;\r\n  refreshToken: string;\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\nexport interface IGetRegFailed {\r\n  readonly type: typeof GET_REG_FAILED;\r\n}\r\n\r\nexport interface IGetAuthSuccess {\r\n  readonly type: typeof GET_AUTH_SUCCESS;\r\n  accessToken: string;\r\n  refreshToken: string;\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\nexport interface IGetAuthFailed {\r\n  readonly type: typeof GET_AUTH_FAILED;\r\n}\r\n\r\nexport interface ILogoutSuccess {\r\n  readonly type: typeof LOGOUT_SUCCESS;\r\n  accessToken: string;\r\n  refreshToken: string;\r\n}\r\n\r\nexport interface ILogoutFailed {\r\n  readonly type: typeof LOGOUT_FAILED;\r\n}\r\n\r\nexport type TAuth =\r\n  | IGetRegSuccess\r\n  | IGetRegFailed\r\n  | IGetAuthSuccess\r\n  | IGetAuthFailed\r\n  | ILogoutSuccess\r\n  | ILogoutFailed\r\n  | IRestoreUserSuccess\r\n  | IRestoreUserFailed;\r\n\r\nexport const getRegSuccessAction = (\r\n  accessToken: string,\r\n  refreshToken: string,\r\n  name: string,\r\n  email: string\r\n): IGetRegSuccess => ({\r\n  type: GET_REG_SUCCESS,\r\n  accessToken,\r\n  refreshToken,\r\n  name,\r\n  email,\r\n});\r\n\r\nexport const getRegFailedAction = (): IGetRegFailed => ({\r\n  type: GET_REG_FAILED,\r\n});\r\n\r\nexport const getAuthSuccessAction = (\r\n    accessToken: string,\r\n    refreshToken: string,\r\n    name: string,\r\n    email: string\r\n  ): IGetAuthSuccess => ({\r\n    type: GET_AUTH_SUCCESS,\r\n    accessToken,\r\n    refreshToken,\r\n    name,\r\n    email,\r\n  });\r\n\r\n  export const getAuthFailedAction = (): IGetAuthFailed => ({\r\n    type: GET_AUTH_FAILED,\r\n  });\r\n\r\n  export const logoutSuccessAction = (\r\n    accessToken: string,\r\n    refreshToken: string,\r\n  ): ILogoutSuccess => ({\r\n    type: LOGOUT_SUCCESS,\r\n    accessToken,\r\n    refreshToken\r\n  });\r\n\r\n  export const logoutFailedAction = (): ILogoutFailed => ({\r\n    type: LOGOUT_FAILED,\r\n  });\r\n\r\n  export const RestoreUserSuccessAction = (user: TUser): IRestoreUserSuccess => ({\r\n    type: RESTORE_USER_SUCCESS,\r\n    user\r\n  });\r\n\r\n  export const RestoreUserFailedAction = (): IRestoreUserFailed => ({\r\n    type: RESTORE_USER_FAILED\r\n  });","import { AppDispatch, AppThunk } from '../../types';\r\nimport { TUser } from '../../types/data';\r\nimport { registration, authorization, logOut, getUser } from '../api';\r\nimport {\r\n  getRegSuccessAction,\r\n  getRegFailedAction,\r\n  getAuthSuccessAction,\r\n  getAuthFailedAction,\r\n  logoutSuccessAction,\r\n  logoutFailedAction,\r\n  RestoreUserSuccessAction,\r\n  RestoreUserFailedAction,\r\n} from './action-type';\r\n\r\nexport const registrationUser: AppThunk = ({\r\n  name,\r\n  email,\r\n  password,\r\n}: TUser) => {\r\n  return function (dispatch: AppDispatch) {\r\n    const fetchReg = async () => {\r\n      const res = await registration({ name, email, password });\r\n      const accessToken = res.accessToken.split(' ')[1];\r\n      dispatch(\r\n        getRegSuccessAction(\r\n          accessToken,\r\n          res.refreshToken,\r\n          res.user.name,\r\n          res.user.email\r\n        )\r\n      );\r\n      return res;\r\n    };\r\n    fetchReg().catch(() => dispatch(getRegFailedAction()));\r\n  };\r\n};\r\n\r\nexport const authUser: AppThunk = ({\r\n  email,\r\n  password,\r\n}: Pick<TUser, 'email' | 'password'>) => {\r\n  return function (dispatch: AppDispatch) {\r\n    const fetchAuth = async () => {\r\n      const res = await authorization({ email, password });\r\n      const accessToken = res.accessToken.split(' ')[1];\r\n      dispatch(\r\n        getAuthSuccessAction(\r\n          accessToken,\r\n          res.refreshToken,\r\n          res.user.name,\r\n          res.user.email\r\n        )\r\n      );\r\n      return res;\r\n    };\r\n    fetchAuth().catch(() => dispatch(getAuthFailedAction()));\r\n  };\r\n};\r\n\r\nexport const logOutUser: AppThunk = (\r\n  accessToken: string,\r\n  refreshToken: string\r\n) => {\r\n  return function (dispatch: AppDispatch) {\r\n    const fetchOut = async () => {\r\n      const res = await logOut(refreshToken);\r\n      dispatch(logoutSuccessAction(accessToken, refreshToken));\r\n      return res;\r\n    };\r\n    fetchOut().catch(() => dispatch(logoutFailedAction()));\r\n  };\r\n};\r\n\r\nexport const restoreUser: AppThunk = (accessToken: string) => {\r\n  return function (dispatch: AppDispatch) {\r\n    const fetchRestore = async () => {\r\n      const res = await getUser(accessToken);\r\n      dispatch(RestoreUserSuccessAction(res.user));\r\n      return res;\r\n    };\r\n    return fetchRestore().catch(() => dispatch(RestoreUserFailedAction()));\r\n  };\r\n};\r\n","import {\r\n    TypedUseSelectorHook,\r\n    useDispatch as dispatchHook,\r\n    useSelector as selectorHook\r\n  } from 'react-redux';\r\n  import { AppDispatch, RootState, AppThunk } from './index';\r\n  \r\n  export const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();\r\n  export const useSelector: TypedUseSelectorHook<RootState> = selectorHook;","import { useEffect, useState } from 'react';\r\nimport { getCookie, setCookie } from '../utils/cookie';\r\nimport { restoreUser } from '../services/auth/actions';\r\nimport { getNewAccessToken } from '../services/api';\r\nimport { useDispatch, useSelector } from '../types/hooks';\r\n\r\nexport function useAuth() {\r\n  const dispatch = useDispatch();\r\n  const [hasError, setError] = useState<boolean>(false);\r\n\r\n  const accessToken = getCookie('accessToken');\r\n  const refreshToken = getCookie('refreshToken');\r\n\r\n  const user = useSelector(store => store.auth.user);\r\n  const [isLoadedUser, setIsLoadedUser] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    //#region func\r\n    const saveUser = async (token: string) => {\r\n      return dispatch(restoreUser(token));\r\n    };\r\n    const getToken = async (token: string) => {\r\n      const res = await getNewAccessToken(token);\r\n      const newAccessToken = res.accessToken.split(' ')[1];\r\n      setCookie('refreshToken', res.refreshToken);\r\n      setCookie('accessToken', newAccessToken);\r\n      await saveUser(newAccessToken);\r\n      setIsLoadedUser(true);\r\n    };\r\n    //#endregion\r\n\r\n    if (accessToken) {\r\n      if (user) {\r\n        setIsLoadedUser(true);\r\n      } else {\r\n        saveUser(accessToken)\r\n          .then(() => setIsLoadedUser(true))\r\n          .catch(() => setError(true));\r\n      }\r\n    } else if (refreshToken) {\r\n      getToken(refreshToken).catch(() => setError(true));\r\n    }\r\n  }, [accessToken, dispatch, refreshToken, user]);\r\n\r\n  if (!refreshToken || hasError) {\r\n    return [null, true];\r\n  }\r\n\r\n  return [user, isLoadedUser];\r\n}\r\n","import { Route, useLocation } from 'react-router-dom';\r\nimport { Redirect } from 'react-router';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport React from 'react';\r\ninterface i{\r\n  children: JSX.Element,\r\n \r\n}\r\nexport const ProtectedRoute: React.FC<i & Record<string,any>> = ({ children, ...rest }) => {\r\n  const [user, isLoadedUser] = useAuth();\r\n  const location = useLocation();\r\n\r\n  if (!isLoadedUser) {\r\n    return null;\r\n  }\r\n\r\n  if (!user) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: '/login',\r\n          state: { from: location },\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  return <Route {...rest} render={() => children} />;\r\n};\r\n","export const GET_INGREDIENT_SUCCESS: 'GET_INGREDIENT_SUCCESS' = 'GET_INGREDIENT_SUCCESS';\r\nexport const GET_INGREDIENT_REQUEST: 'GET_INGREDIENT_REQUEST' = 'GET_INGREDIENT_REQUEST';\r\nexport const GET_INGREDIENT_FAILED: 'GET_INGREDIENT_FAILED' = 'GET_INGREDIENT_FAILED';","import { AppDispatch, AppThunk } from '../../types';\r\nimport { getIngredients } from '../api';\r\nimport {\r\n  IngredientsSuccessAction,\r\n  IngredientsRequestAction,\r\n  IngredientsFailedAction,\r\n} from './action-type';\r\n\r\nexport const loadIngredients: AppThunk = () => {\r\n  return function (dispatch: AppDispatch) {\r\n    const fetchIngredients = async () => {\r\n      const res = await getIngredients();\r\n      dispatch(IngredientsSuccessAction(res.data));\r\n      return res;\r\n    };\r\n    dispatch(IngredientsRequestAction());\r\n    fetchIngredients().catch(() => {\r\n      dispatch(IngredientsFailedAction());\r\n    });\r\n  };\r\n}\r\n","import { TDataItem } from '../../types/data';\r\nimport {\r\n    GET_INGREDIENT_FAILED,\r\n    GET_INGREDIENT_REQUEST,\r\n    GET_INGREDIENT_SUCCESS,\r\n  } from './constants';\r\n\r\n  export interface IIngredientFailed {\r\n    readonly type: typeof GET_INGREDIENT_FAILED;\r\n  }\r\n\r\n  export interface IIngredientReqest {\r\n    readonly type: typeof GET_INGREDIENT_REQUEST;\r\n  }\r\n\r\n  export interface IIngredientSuccess {\r\n    readonly type: typeof GET_INGREDIENT_SUCCESS,\r\n    readonly data: TDataItem[];\r\n  }\r\n\r\n  export type TIngredient = IIngredientFailed\r\n  | IIngredientReqest\r\n  | IIngredientSuccess\r\n\r\n  export const IngredientsSuccessAction = (data: TDataItem[]): IIngredientSuccess => ({\r\n    type: GET_INGREDIENT_SUCCESS,\r\n    data\r\n  });\r\n\r\n  export const IngredientsRequestAction = (): IIngredientReqest => ({\r\n    type: GET_INGREDIENT_REQUEST,\r\n  });\r\n\r\n  export const IngredientsFailedAction = (): IIngredientFailed => ({\r\n    type: GET_INGREDIENT_FAILED,\r\n  });","import style from './ingredient-details.module.css';\r\nimport { useDispatch, useSelector } from '../../../types/hooks';\r\nimport { useParams } from 'react-router';\r\nimport React, { useEffect } from 'react';\r\nimport { loadIngredients } from '../../../services/ingredient/actions';\r\nimport { TDataItem } from '../../../types/data';\r\n\r\nconst IngredientDetails: React.FC = () => {\r\n  const { id } = useParams<{ id: string }>();\r\n  const ingredients = useSelector(store => store.ingredient.ingredients);\r\n  const dispatch = useDispatch();\r\n  const currentIngredient = ingredients.find((x: TDataItem) => x._id === id);\r\n\r\n  useEffect(() => {\r\n    if (ingredients.length === 0) {\r\n      dispatch(loadIngredients());\r\n    }\r\n  }, [dispatch]);\r\n\r\n  if (!currentIngredient) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"pb-15\">\r\n      <img src={currentIngredient.image_large} alt={currentIngredient.name} />\r\n      <p className=\"text text_type_main-medium mt-4\">\r\n        {currentIngredient.name}\r\n      </p>\r\n      <section\r\n        className={`text text_type_main-small text_color_inactive mt-8 ${style.energy}`}\r\n      >\r\n        <span>\r\n          <p>Калории, ккал</p>\r\n          <p>{currentIngredient.calories}</p>\r\n        </span>\r\n        <span>\r\n          <p>Белки, г</p>\r\n          <p>{currentIngredient.proteins}</p>\r\n        </span>\r\n        <span>\r\n          <p>Жиры, г</p>\r\n          <p>{currentIngredient.fat}</p>\r\n        </span>\r\n        <span>\r\n          <p>Углеводы, г</p>\r\n          <p>{currentIngredient.carbohydrates}</p>\r\n        </span>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IngredientDetails;\r\n","export const SEND_ORDER_SUCCESS:'SEND_ORDER_SUCCESS' = 'SEND_ORDER_SUCCESS';\r\nexport const SEND_ORDER_REQUEST:'SEND_ORDER_REQUEST' = 'SEND_ORDER_REQUEST';\r\nexport const SEND_ORDER_FAILED:'SEND_ORDER_FAILED' = 'SEND_ORDER_FAILED';\r\nexport const CONFIRM_ORDER:'CONFIRM_ORDER' = 'CONFIRM_ORDER';\r\n\r\nexport const GET_ORDER_SUCCESS:'GET_ORDER_SUCCESS' = 'GET_ORDER_SUCCESS';\r\nexport const GET_ORDER_REQUEST: 'GET_ORDER_REQUEST' = 'GET_ORDER_REQUEST';\r\nexport const GET_ORDER_FAILED:'GET_ORDER_FAILED' = 'GET_ORDER_FAILED';","import { TOrders, TUser } from '../../types/data';\r\nimport {\r\n  SEND_ORDER_SUCCESS,\r\n  SEND_ORDER_REQUEST,\r\n  SEND_ORDER_FAILED,\r\n  GET_ORDER_SUCCESS,\r\n  GET_ORDER_REQUEST,\r\n  GET_ORDER_FAILED,\r\n  CONFIRM_ORDER,\r\n} from './constants';\r\n\r\nexport interface ISendOrderSuccess {\r\n  readonly type: typeof SEND_ORDER_SUCCESS;\r\n  order: TOrders & {owner:TUser} ;\r\n  idIngredients: string[];\r\n  idBun: string;\r\n}\r\nexport interface ISendOrderRequest {\r\n  readonly type: typeof SEND_ORDER_REQUEST;\r\n}\r\nexport interface ISendOrderFailed {\r\n  readonly type: typeof SEND_ORDER_FAILED;\r\n}\r\nexport interface IGetOrderFailed {\r\n  readonly type: typeof GET_ORDER_FAILED;\r\n}\r\nexport interface IGetOrderRequest {\r\n  readonly type: typeof GET_ORDER_REQUEST;\r\n}\r\nexport interface IGetOrderSuccess {\r\n  readonly type: typeof GET_ORDER_SUCCESS,\r\n  order: TOrders\r\n}\r\nexport interface IConfirmOrder {\r\n  readonly type: typeof CONFIRM_ORDER,\r\n  value: boolean;\r\n}\r\n\r\nexport type TOrder =\r\n  | ISendOrderSuccess\r\n  | ISendOrderRequest\r\n  | ISendOrderFailed\r\n  | IGetOrderFailed\r\n  | IGetOrderRequest\r\n  | IGetOrderSuccess\r\n  | IConfirmOrder;\r\n\r\nexport const SendOrderSuccessAction = (\r\n  order: TOrders & {owner:TUser},\r\n  idIngredients: string[],\r\n  idBun: string\r\n): ISendOrderSuccess => ({\r\n  type: SEND_ORDER_SUCCESS,\r\n  order,\r\n  idIngredients,\r\n  idBun,\r\n});\r\nexport const SendOrderRequestAction = (): ISendOrderRequest => ({\r\n  type: SEND_ORDER_REQUEST,\r\n});\r\nexport const SendOrderFailedAction = (): ISendOrderFailed => ({\r\n  type: SEND_ORDER_FAILED,\r\n});\r\nexport const GetOrderFailedAction = (): IGetOrderFailed => ({\r\n  type: GET_ORDER_FAILED,\r\n});\r\nexport const GetOrderRequestAction = (): IGetOrderRequest => ({\r\n  type: GET_ORDER_REQUEST,\r\n});\r\nexport const GetOrderSuccessAction = (order: TOrders): IGetOrderSuccess => ({\r\n  type: GET_ORDER_SUCCESS,\r\n  order\r\n});\r\nexport const ConfirmOrderAction = (value: boolean): IConfirmOrder => ({\r\n  type: CONFIRM_ORDER,\r\n  value\r\n});\r\n","import { AppDispatch, AppThunk } from '../../types';\r\nimport { sendOrder, getOrder } from '../api';\r\nimport {\r\n  SendOrderSuccessAction,\r\n  SendOrderRequestAction,\r\n  SendOrderFailedAction,\r\n  GetOrderSuccessAction,\r\n  GetOrderRequestAction,\r\n  GetOrderFailedAction\r\n} from './action-type';\r\n\r\nexport const orderSend: AppThunk = (idIngredients: string[], idBun: string, token: string) => {\r\n  return function (dispatch: AppDispatch) {\r\n    const fetchOrder = async () => {\r\n      const res = await sendOrder(idIngredients, idBun, token);\r\n      dispatch(SendOrderSuccessAction(res.order, idIngredients, idBun));\r\n      return res;\r\n    };\r\n    dispatch(SendOrderRequestAction());\r\n    fetchOrder().catch(() => {\r\n      dispatch(SendOrderFailedAction());\r\n    });\r\n  };\r\n}\r\n\r\nexport const loadOrder: AppThunk = (numberOrder: string) => {\r\n  return function (dispatch: AppDispatch) {\r\n    const fetchOrder = async () => {\r\n      const res = await getOrder(numberOrder);\r\n      dispatch(GetOrderSuccessAction(res.orders[0]));\r\n      return res;\r\n    };\r\n    dispatch(GetOrderRequestAction());\r\n    fetchOrder().catch(() => {\r\n      dispatch(GetOrderFailedAction());\r\n    });\r\n  };\r\n}","import { format, isToday, isYesterday, formatDistance } from \"date-fns\";\r\nimport { ru } from \"date-fns/locale\";\r\n\r\nexport function getFormattedDate(d: Date) {\r\n  if (isToday(d)) {\r\n    return `Сегодня, ${format(d, \"kk:mm\", { locale: ru })}`;\r\n  }\r\n\r\n  if (isYesterday(d)) {\r\n    return `Вчера, ${format(d, \"kk:mm\", { locale: ru })}`;\r\n  }\r\n\r\n  return `${formatDistance(new Date(d), Date.now(), { locale: ru })} назад`;\r\n}\r\n\r\n\r\n","import { useSelector, useDispatch } from '../../../types/hooks';\r\nimport { useParams } from 'react-router';\r\nimport styles from './feed-order-details.module.css';\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useEffect } from 'react';\r\nimport { loadIngredients } from '../../../services/ingredient/actions';\r\nimport { loadOrder } from '../../../services/order/actions';\r\nimport {getFormattedDate} from '../../../utils/formatDate'\r\n\r\nexport const FeedOrderDetails = () => {\r\n  const { id } = useParams<{ id: string }>();\r\n  const message = useSelector(store => store.orders.messages);\r\n  const orderState = useSelector(store => store.order.order);\r\n  const ingredients = useSelector(store => store.ingredient.ingredients);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (ingredients.length === 0) {\r\n      dispatch(loadIngredients());\r\n    }\r\n    if (!message) {\r\n      dispatch(loadOrder(id));\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const orders = message ? message.orders : [orderState];\r\n\r\n  if (!orders) {\r\n    return null;\r\n  }\r\n  const currentOrder = message\r\n    ? orders.find((x) => x!.number === parseInt(id))\r\n    : orderState;\r\n\r\n    if (!currentOrder) {\r\n      return null;\r\n    }\r\n  const orderIngredientsId = currentOrder!.ingredients;\r\n  const orderIngredients = ingredients.filter((x) =>\r\n    orderIngredientsId.some((y) => y === x._id)\r\n  );\r\n\r\n  const count = orderIngredientsId.reduce((acc: any, el: string) => {\r\n    acc[el] = (acc[el] || 0) + 1;\r\n    return acc;\r\n  }, []);\r\n\r\n\r\n\r\n  const totalPrice = orderIngredients.reduce<number>((total, curr) => {\r\n    const sumIngredients = curr.price * count[curr._id];\r\n    total += sumIngredients;\r\n    return total;\r\n  }, 0);\r\n\r\n  return (\r\n    <div className={styles.wrap}>\r\n      <div className={styles.order}>\r\n        <span className=\"text text_type_main-medium mt-5\">\r\n          {currentOrder!.name}\r\n        </span>\r\n        <span className={`${styles.status} text text_type_main-default mt-1`}>\r\n          {currentOrder!.status}\r\n        </span>\r\n        <span className=\"mt-15 text text_type_main-medium\">Состав:</span>\r\n        <div className={`${styles.ingredients} mt-6 pr-6`}>\r\n          {orderIngredients.map((x) => (\r\n            <div className={styles.ingredient} key={x._id}>\r\n              <span className={styles.row}>\r\n                <span className={`${styles.imgPrew} mr-4`}>\r\n                  <img className={styles.img} src={x.image_mobile} alt=\"\" />\r\n                </span>\r\n                <span className=\"text text_type_main-default\">{x.name}</span>\r\n              </span>\r\n              <span className={styles.row}>\r\n                <span className=\"text text_type_digits-default mr-2\">\r\n                  {count[x._id]} x {x.price}\r\n                </span>\r\n                <CurrencyIcon type=\"primary\" />\r\n              </span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <span className={`${styles.footer} mt-10 mb-10`}>\r\n          <span className=\"text text_type_main-default text_color_inactive\">\r\n            {getFormattedDate(currentOrder!.createdAt)}\r\n          </span>\r\n          <span className=\"text text_type_digits-default\">\r\n            {totalPrice} <CurrencyIcon type=\"primary\" />\r\n          </span>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","export type TDataItem = {\r\n  _id: string;\r\n  name: string;\r\n  type: string;\r\n  proteins: number;\r\n  fat: number;\r\n  carbohydrates: number;\r\n  calories: number;\r\n  price: number;\r\n  image: string;\r\n  image_mobile: string;\r\n  image_large: string;\r\n  __v: number;\r\n  key: string;\r\n};\r\n\r\nexport type TUser = {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n};\r\n\r\nexport enum EStatus {\r\n  Done = 'done',\r\n  Created = 'created',\r\n  Pending = 'pending',\r\n}\r\nexport type TOrders = {\r\n  ingredients: string[];\r\n  _id: string;\r\n  status: EStatus;\r\n  number: number;\r\n  createdAt: Date;\r\n  updatedAt: string;\r\n  name: string;\r\n};\r\n\r\nexport type TInitialState = {\r\n  //#region ingredient\r\n  isLoadingIngredient: boolean;\r\n  hasErrorIngredient: boolean;\r\n  ingredients: TDataItem[];\r\n  //#endregion\r\n\r\n  //region order\r\n  order: TOrders | null;\r\n  totalSum: number;\r\n  bun: TDataItem | null;\r\n  components: TDataItem[];\r\n  confirmOrder: boolean;\r\n  isLoadingOrder: boolean;\r\n  hasErrorOrder: boolean;\r\n  //#endregion\r\n\r\n  user: TUser | null;\r\n  isRecoverEmail: boolean;\r\n  isResetPassword: boolean;\r\n\r\n  wsConnected: boolean;\r\n  messages: {\r\n    success: boolean;\r\n    orders: TOrders[] | null;\r\n    total: number;\r\n    totalToday: number;\r\n  } | null;\r\n};\r\n","import style from './modal-overlay.module.css';\r\n\r\ninterface IModalOverLay {\r\n  onClick(): void;\r\n  children: React.ReactElement;\r\n}\r\nconst ModalOverlay: React.FC<IModalOverLay> = ({ onClick, children }) => {\r\n  return (\r\n    <div onClick={onClick} className={style.overlay}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalOverlay;\r\n","import React, { useEffect } from 'react';\r\nimport style from './modal.module.css';\r\nimport ModalOverlay from './modal-overlay/modal-overlay';\r\nimport ReactDOM from 'react-dom';\r\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\ninterface IModalProps {\r\n  isOpen: boolean;\r\n  onClick(): void;\r\n  onCloseClick(): void;\r\n  title?: string;\r\n  children: React.ReactElement;\r\n}\r\nconst Modal: React.FC<IModalProps> = ({\r\n  isOpen,\r\n  children,\r\n  onClick,\r\n  onCloseClick,\r\n  title,\r\n}) => {\r\n  const onKeydown = (e: KeyboardEvent) => {\r\n    switch (e.code) {\r\n      case 'Escape': {\r\n        onCloseClick();\r\n        break;\r\n      }\r\n      default: {\r\n        return;\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', onKeydown);\r\n    return () => document.removeEventListener('keydown', onKeydown);\r\n  });\r\n\r\n  if (isOpen === false) {\r\n    return null;\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <ModalOverlay onClick={onClick}>\r\n      <div className={style.modal} onClick={(e) => e.stopPropagation()}>\r\n        <span className={`pt-10 pl-10 pr-10 ${style.title}`}>\r\n          <h1 className=\"text text_type_main-large text_type_digits-medium\">{title}</h1>\r\n          <CloseIcon type=\"primary\" onClick={onCloseClick} />\r\n        </span>\r\n        <div className=\"pr-25 pl-25\">{children}</div>\r\n      </div>\r\n    </ModalOverlay>,\r\n    document.getElementById('modal')!\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import Modal from '../modal/modal';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { History } from 'history';\r\nimport IngredientDetails from './ingredient-details/ingredient-details';\r\n\r\nexport const ModalIngredient: React.FC = () => {\r\n  const history = useHistory<History>();\r\n  const handleClick = () => {\r\n    history.goBack();\r\n  };\r\n  return (\r\n    <Modal\r\n      isOpen={true}\r\n      onClick={handleClick}\r\n      title={'Детали ингридиента'}\r\n      onCloseClick={handleClick}\r\n    >\r\n      <IngredientDetails />\r\n    </Modal>\r\n  );\r\n}\r\n","import Modal from '../modal/modal';\r\nimport { useSelector } from '../../types/hooks';\r\nimport { useParams } from 'react-router';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { History } from 'history';\r\nimport { FeedOrderDetails } from './feed-orders-detalis/feed-order-details';\r\nimport { TOrders } from '../../types/data';\r\n\r\nexport const ModalOrderFeed: React.FC = () => {\r\n  const history = useHistory<History>();\r\n  const { id } = useParams<{ id: string }>();\r\n    const message = useSelector(store => store.orders.messages);\r\n    const orders = message!.orders\r\n    const currentOrder = orders!.find((x: TOrders) => x.number === parseInt(id));\r\n\r\n  const handleClick = () => {\r\n    history.goBack();\r\n  };\r\n  return (\r\n    <Modal\r\n      isOpen={true}\r\n      title={`#${currentOrder!.number}`}\r\n      onClick={handleClick}\r\n      onCloseClick={handleClick}\r\n    >\r\n      <FeedOrderDetails/>\r\n    </Modal>\r\n  );\r\n}","import { Route } from 'react-router-dom';\r\nimport { Redirect } from 'react-router';\r\nimport { useAuth } from '../../hooks/useAuth';\r\n\r\ninterface IRedirectAuthRoute {\r\n  redirect: string;\r\n}\r\nexport const RedirectAuthRoute: React.FC<IRedirectAuthRoute & Record<string,any>> = ({\r\n  children,\r\n  redirect,\r\n  ...rest\r\n}) => {\r\n  const [user, isLoadedUser] = useAuth();\r\n\r\n  if (!isLoadedUser) {\r\n    return null;\r\n  }\r\n\r\n  if (user) {\r\n    return <Redirect to={redirect} />;\r\n  }\r\n\r\n  return <Route {...rest} render={() => children} />;\r\n};\r\n","export const FORGOT_SUCCESS: 'FORGOT_SUCCESS' = 'FORGOT_SUCCESS';\r\nexport const FORGOT_FAILED: 'FORGOT_FAILED' = 'FORGOT_FAILED';\r\n\r\nexport const RESET_SUCCESS: 'RESET_SUCCESS' = 'RESET_SUCCESS';\r\nexport const RESET_FAILED:'RESET_FAILED' = 'RESET_FAILED';\r\n\r\nexport const CLEAR_RESET_PASSWORD: 'CLEAR_RESET_PASSWORD' = 'CLEAR_RESET_PASSWORD';","import { AppDispatch, AppThunk } from '../../types';\r\nimport { forgotPassword, resetPassword } from '../api';\r\nimport {\r\n  ForgotSuccessAction,\r\n  ForgotFailedAction,\r\n  ResetFailedAction,\r\n  ResetSuccessAction,\r\n} from './action-type';\r\n\r\nexport const forgotPasswordUser: AppThunk = (email: string) => {\r\n  return function (dispatch: AppDispatch) {\r\n    const fetchForgot = async () => {\r\n      const res = await forgotPassword(email);\r\n      dispatch(ForgotSuccessAction());\r\n      return res;\r\n    };\r\n    fetchForgot().catch(() => dispatch(ForgotFailedAction()));\r\n  };\r\n};\r\n\r\ninterface IResetPasswordUserParams {\r\n  password: string;\r\n  token: string;\r\n}\r\nexport const resetPasswordUser: AppThunk = ({\r\n  password,\r\n  token,\r\n}: IResetPasswordUserParams) => {\r\n  return function (dispatch: AppDispatch) {\r\n    const fetchReset = async () => {\r\n      const res = await resetPassword(password, token);\r\n      dispatch(ResetSuccessAction());\r\n      return res;\r\n    };\r\n    fetchReset().catch(() => dispatch(ResetFailedAction()));\r\n  };\r\n};\r\n","import {\r\n    FORGOT_SUCCESS,\r\n    FORGOT_FAILED,\r\n    RESET_SUCCESS,\r\n    RESET_FAILED,\r\n    CLEAR_RESET_PASSWORD,\r\n  } from './constants';\r\n\r\n  export interface IForgotSuccess {\r\n    readonly type: typeof FORGOT_SUCCESS;\r\n  }\r\n\r\n  export interface IForgotFailed {\r\n    readonly type: typeof FORGOT_FAILED;\r\n  }\r\n\r\n  export interface IResetSuccess {\r\n    readonly type: typeof RESET_SUCCESS;\r\n  }\r\n\r\n  export interface IResetFailed {\r\n    readonly type: typeof RESET_FAILED;\r\n  }\r\n\r\n  export interface IClearResetPassword {\r\n    readonly type: typeof CLEAR_RESET_PASSWORD;\r\n  }\r\n\r\n  export type TResetPassword = IForgotSuccess\r\n  | IForgotFailed\r\n  | IResetSuccess\r\n  | IResetFailed\r\n  | IClearResetPassword\r\n\r\n  export const ForgotSuccessAction = (): IForgotSuccess => ({\r\n    type: FORGOT_SUCCESS,\r\n  });\r\n  export const ForgotFailedAction = (): IForgotFailed => ({\r\n    type: FORGOT_FAILED,\r\n  });\r\n  export const ResetFailedAction = (): IResetFailed => ({\r\n    type: RESET_FAILED,\r\n  });\r\n  export const ResetSuccessAction = (): IResetSuccess => ({\r\n    type: RESET_SUCCESS,\r\n  });\r\n  export const ClearResetPasswordAction = (): IClearResetPassword => ({\r\n    type: CLEAR_RESET_PASSWORD,\r\n  });","import React, { useEffect } from 'react';\r\nimport styles from './form.module.css';\r\n\r\ninterface IFormProps {\r\n  onSubmit(e: React.FormEvent): void;\r\n  children: React.ReactNode;\r\n  idButton?: string;\r\n}\r\nexport const Form: React.FC<IFormProps> = ({\r\n  children,\r\n  onSubmit,\r\n  idButton,\r\n}) => {\r\n  useEffect(() => {\r\n    if (idButton) {\r\n      const button = document.getElementById(idButton);\r\n      button?.children[0].setAttribute('type', 'submit');\r\n    }\r\n  }, []);\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <form onSubmit={onSubmit} className={styles.form}>\r\n        {children}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  Input,\r\n  Button,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { forgotPasswordUser } from '../services/reset-password/actions';\r\nimport { useDispatch, useSelector } from '../types/hooks';\r\nimport { Form } from '../components/form/form';\r\n\r\nexport const ForgotPasswordPage: React.FC = () => {\r\n  const [value, setValue] = useState<string>('');\r\n  const dispatch = useDispatch();\r\n  const isRecoverEmail = useSelector(\r\n    store=> store.password.isRecoverEmail\r\n  );\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue(e.target.value);\r\n  };\r\n  const onSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    dispatch(forgotPasswordUser(value));\r\n  };\r\n\r\n  if (isRecoverEmail) {\r\n    return <Redirect to={{ pathname: '/reset' }} />;\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={onSubmit} idButton=\"recoverButton\">\r\n      <h1 className=\"text text_type_main-medium\">Восстановление пароля</h1>\r\n      <Input\r\n        type=\"email\"\r\n        placeholder={'Укажите email'}\r\n        onChange={onChange}\r\n        value={value}\r\n        name={'email'}\r\n        size={'default'}\r\n      />\r\n      <span id=\"recoverButton\">\r\n        <Button type=\"primary\" size=\"large\">\r\n          Восстановить\r\n        </Button>\r\n      </span>\r\n      <p className=\"mt-20 text text_type_main-default text_color_inactive\">\r\n        Вспомнили пароль?\r\n        <Link to=\"/login\" className=\"text_color_accent\">\r\n          {' '}\r\n          Войти\r\n        </Link>\r\n      </p>\r\n    </Form>\r\n  );\r\n};\r\n","import {\r\n  Input,\r\n  Button,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link, Redirect, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from '../types/hooks';\r\nimport { authUser } from '../services/auth/actions';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport { Form } from '../components/form/form';\r\nimport { TUser } from '../types/data';\r\n\r\ntype LocationState = {\r\n  from: Location;\r\n};\r\n\r\ntype TIsErrorInput = {\r\n  email: boolean;\r\n  password: boolean;\r\n};\r\n\r\nexport const LoginPage: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const [value, setValue] = useState<Pick<TUser, 'password' | 'email'>>({\r\n    password: '',\r\n    email: '',\r\n  });\r\n\r\n  const [isPasswordShow, setIsPasswordShow] = useState<boolean>(false);\r\n  const [isError, setIsError] = useState<TIsErrorInput>({\r\n    email: false,\r\n    password: false,\r\n  });\r\n  const [isSubmitted, setIsSubmited] = useState<boolean>(false);\r\n\r\n  const [user, isLoadedUser] = useAuth();\r\n  const location = useLocation<LocationState>();\r\n  const from = location.state?.from?.pathname;\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue({ ...value, [e.target.name]: e.target.value });\r\n    setIsError({ email: false, password: false });\r\n  };\r\n\r\n  const onIconClick = () => {\r\n    setIsPasswordShow(!isPasswordShow);\r\n  };\r\n  const onSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!value.password || !value.email) {\r\n      setIsError({\r\n        email: !value.email ? true : false,\r\n        password: !value.password ? true : false,\r\n      });\r\n      return;\r\n    }\r\n    dispatch(authUser(value));\r\n    setIsSubmited(true);\r\n  };\r\n\r\n  if (!isLoadedUser) {\r\n    return null;\r\n  }\r\n\r\n  if (user) {\r\n    if (isSubmitted) {\r\n      return <Redirect to={from || '/'} />;\r\n    } else {\r\n      return <Redirect to=\"/profile\" />;\r\n    }\r\n  }\r\n  return (\r\n    <Form onSubmit={onSubmit} idButton=\"enterButton\">\r\n      <h1 className=\"text text_type_main-medium\">Войти</h1>\r\n      <Input\r\n        type=\"email\"\r\n        placeholder={'Email'}\r\n        onChange={onChange}\r\n        value={value.email}\r\n        name={'email'}\r\n        size={'default'}\r\n        error={isError.email}\r\n        errorText={'Заполните поле'}\r\n      />\r\n      <Input\r\n        type={isPasswordShow ? 'text' : 'password'}\r\n        placeholder=\"пароль\"\r\n        onChange={onChange}\r\n        value={value.password}\r\n        name={'password'}\r\n        size={'default'}\r\n        icon={'ShowIcon'}\r\n        onIconClick={onIconClick}\r\n        error={isError.password}\r\n        errorText={'Заполните поле'}\r\n      />\r\n      <span id=\"enterButton\">\r\n        <Button type=\"primary\" size=\"large\">\r\n          Войти\r\n        </Button>\r\n      </span>\r\n      <p className=\"mt-20 text text_type_main-default text_color_inactive\">\r\n        Вы - новый пользователь?\r\n        <Link to=\"/register\" className=\"text_color_accent\">\r\n          {' '}\r\n          Зарегистрироваться\r\n        </Link>\r\n      </p>\r\n      <p className=\"mt-4 text text_type_main-default text_color_inactive\">\r\n        Забыли пароль?{' '}\r\n        <Link to=\"/forgot-password\" className=\"text_color_accent\">\r\n          Восстановить пароль\r\n        </Link>\r\n      </p>\r\n    </Form>\r\n  );\r\n};\r\n","import style from './burger-item.module.css';\r\nimport { TDataItem } from '../../../types/data';\r\nimport { useSelector } from '../../../types/hooks';\r\nimport { useDrag } from 'react-dnd';\r\nimport {\r\n  CurrencyIcon,\r\n  Counter,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface IBurgerItem {\r\n  data: TDataItem\r\n}\r\nconst BurgerItem: React.FC<IBurgerItem> = ({ data }) => {\r\n  const { components, bun } = useSelector(store => store.component);\r\n\r\n  const [{ opacity }, dragRef] = useDrag({\r\n    type: 'ingredient',\r\n    item: data,\r\n    collect: (monitor) => ({\r\n      opacity: monitor.isDragging() ? 0.5 : 1,\r\n    }),\r\n  });\r\n\r\n  const counter =\r\n    bun && bun._id === data._id\r\n      ? 2\r\n      : components.filter((x: TDataItem) => x._id === data._id).length;\r\n\r\n  return (\r\n    <div ref={dragRef}>\r\n      <Link\r\n        to={{\r\n          pathname: `/ingredient/${data._id}`,\r\n          state: { modal: true },\r\n        }}\r\n        className={style.link}\r\n      >\r\n        <section className={`ml-4 ${style.burgerBlock}`} style={{ opacity }}>\r\n          {counter > 0 && <Counter count={counter} size=\"default\" />}\r\n          <p>\r\n            <img className=\"mb-1 ml-4\" src={data.image} alt={data.name} />\r\n          </p>\r\n\r\n          <p className={`${style.price} text text_type_digits-default`}>\r\n            {data.price} &nbsp;\r\n            <CurrencyIcon type=\"primary\" />\r\n          </p>\r\n\r\n          <p className=\"text text_type_main-default\">{data.name}</p>\r\n        </section>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BurgerItem;\r\n","import React from 'react';\r\nimport { useSelector } from '../../../types/hooks'\r\nimport BurgerItem from '../burger-item/burger-item';\r\nimport style from './burger-items.module.css';\r\nimport { TDataItem } from '../../../types/data';\r\n\r\ninterface IBurgerItemsProps {\r\n  ingredientRef: React.RefObject<HTMLDivElement>;\r\n  bunsAncor?: React.RefObject<HTMLDivElement>;\r\n  saucesAncor?: React.RefObject<HTMLDivElement>;\r\n  mainsAncor?: React.RefObject<HTMLDivElement>;\r\n}\r\n\r\nexport const BurgerItems: React.FC<IBurgerItemsProps> = ({\r\n  ingredientRef,\r\n  bunsAncor,\r\n  saucesAncor,\r\n  mainsAncor,\r\n}) => {\r\n  const ingredients = useSelector(store => store.ingredient.ingredients);\r\n  const buns = ingredients.filter((x: TDataItem) => x.type === 'bun');\r\n  const mains = ingredients.filter((x: TDataItem) => x.type === 'main');\r\n  const sauces = ingredients.filter((x: TDataItem) => x.type === 'sauce');\r\n\r\n  return (\r\n    <div className={`pr-3 ${style.productList}`} ref={ingredientRef}>\r\n      <h2 className=\"mt-10 mb-6\" ref={bunsAncor}>\r\n        Булки\r\n      </h2>\r\n      <div className={style.ingredients}>\r\n        {buns.map((x: TDataItem) => (\r\n          <BurgerItem data={x} key={x._id} />\r\n        ))}\r\n      </div>\r\n\r\n      <h2 className=\"mt-10 mb-6\" ref={saucesAncor}>\r\n        Соусы\r\n      </h2>\r\n      <div className={style.ingredients}>\r\n        {sauces.map((x: TDataItem) => (\r\n          <BurgerItem data={x} key={x._id} />\r\n        ))}\r\n      </div>\r\n\r\n      <h2 className=\"mt-10 mb-6\" ref={mainsAncor}>\r\n        Начинки\r\n      </h2>\r\n      <div className={style.ingredients}>\r\n        {mains.map((x: TDataItem) => (\r\n          <BurgerItem data={x} key={x._id} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useState, useRef, useEffect } from 'react';\r\nimport { BurgerItems } from './burger-items/burger-items';\r\nimport style from './burger-ingredients.module.css';\r\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nconst BurgerIngredients: React.FC = () => {\r\n  const [current, setCurrent] = useState<string>('bun'); //Tab\r\n\r\n  const bunsAncor = useRef<HTMLDivElement>(null);\r\n  const mainsAncor = useRef<HTMLDivElement>(null);\r\n  const saucesAncor = useRef<HTMLDivElement>(null);\r\n\r\n  const ingredientRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const positionScroll = ingredientRef.current!.getBoundingClientRect().top;\r\n      const positionMains =\r\n        mainsAncor.current!.getBoundingClientRect().top - positionScroll;\r\n      const positionSauces =\r\n        saucesAncor.current!.getBoundingClientRect().top - positionScroll;\r\n\r\n      if (positionMains < 0) {\r\n        setCurrent('main');\r\n      } else if (positionSauces < 0) {\r\n        setCurrent('sauces');\r\n      } else {\r\n        setCurrent('bun');\r\n      }\r\n    };\r\n    if (ingredientRef != null) {\r\n      ingredientRef.current!.addEventListener('scroll', handleScroll, {\r\n        passive: true,\r\n      });\r\n    }\r\n    return () => {\r\n      ingredientRef?.current?.removeEventListener('scroll', handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className={style.productPanel}>\r\n        <h1 className=\"text text_type_main-large mt-10 mb-5\">\r\n          Соберите бургер\r\n        </h1>\r\n\r\n        <div style={{ display: 'flex' }}>\r\n          <Tab\r\n            value=\"bun\"\r\n            active={current === 'bun'}\r\n            onClick={(e) => {\r\n              setCurrent(e);\r\n              bunsAncor.current!.scrollIntoView({ behavior: 'smooth' });\r\n            }}\r\n          >\r\n            Булки\r\n          </Tab>\r\n          <Tab\r\n            value=\"sauces\"\r\n            active={current === 'sauces'}\r\n            onClick={(e) => {\r\n              setCurrent(e);\r\n              saucesAncor.current!.scrollIntoView({ behavior: 'smooth' });\r\n            }}\r\n          >\r\n            Соусы\r\n          </Tab>\r\n          <Tab\r\n            value=\"main\"\r\n            active={current === 'main'}\r\n            onClick={(e) => {\r\n              setCurrent(e);\r\n              mainsAncor.current!.scrollIntoView({ behavior: 'smooth' });\r\n            }}\r\n          >\r\n            Начинка\r\n          </Tab>\r\n        </div>\r\n        <BurgerItems\r\n          ingredientRef={ingredientRef}\r\n          bunsAncor={bunsAncor}\r\n          saucesAncor={saucesAncor}\r\n          mainsAncor={mainsAncor}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BurgerIngredients;\r\n","export const ADD_COMPONENT: 'ADD_COMPONENT' = 'ADD_COMPONENT';\r\nexport const DEL_COMPONENT: 'DEL_COMPONENT' = 'DEL_COMPONENT';\r\nexport const UPDATE_COMPONENT: 'UPDATE_COMPONENT' = 'UPDATE_COMPONENT';\r\nexport const CLEAR_COMPONENTS: 'CLEAR_COMPONENTS' = 'CLEAR_COMPONENTS';\r\n","import styles from './order-details.module.css';\r\nimport { useSelector } from '../../../types/hooks';\r\nimport { useAuth } from '../../../hooks/useAuth';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport React from 'react';\r\n\r\nconst OrderDetails: React.FC =  () => {\r\n  const { order, isLoadingOrder } = useSelector(store=> store.order);\r\n  const [user, isLoadedUser] = useAuth();\r\n\r\n  if (!isLoadedUser) {\r\n    return null;\r\n  }\r\n\r\n  if (!user) {\r\n    return (\r\n      <section className={`${styles.message} mb-10`}>\r\n        <p className=\"text text_type_main-medium pt-8\">\r\n          Сделать заказ могут только авторизированные пользователи\r\n        </p>\r\n        <Button type=\"secondary\" size=\"medium\">\r\n          <Link to=\"/login\" className=\"text_color_accent\">\r\n            Войти\r\n          </Link>\r\n        </Button>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <p className={`text text_type_digits-large pt-15 ${styles.light}`}>\r\n          {isLoadingOrder || !order ? '...' : order.number}\r\n        </p>\r\n        <p className=\"text text_type_main-medium pt-8\">идентификатор заказа</p>\r\n        <p className=\"pt-15 pb-15\">\r\n          <img src=\"images/imageDone.gif\" alt=\"done\" />\r\n        </p>\r\n        <p className=\"text text_type_main-small \">Ваш заказ начали готовить</p>\r\n        <p className=\"text text_type_main-small text_color_inactive pb-15 pt-2\">\r\n          Дождитесь готовности на орбитальной станции\r\n        </p>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrderDetails;\r\n","import { useDispatch } from '../../../types/hooks';\r\nimport { useDrop, useDrag } from 'react-dnd';\r\nimport React, { useRef } from 'react';\r\nimport { DEL_COMPONENT } from '../../../services/burger-component/constants';\r\nimport PropTypes, { number } from 'prop-types';\r\nimport { TDataItem } from '../../../types/data';\r\nimport {\r\n  DragIcon,\r\n  ConstructorElement,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\ninterface IComponentItemProps {\r\n  item: TDataItem;\r\n  index: number;\r\n  moveListItem: (dragIndex: number, hoverIndex: number) => void;\r\n}\r\nexport const ComponentItem: React.FC<IComponentItemProps> = ({\r\n  item,\r\n  index,\r\n  moveListItem,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [{ isDragging }, dragRef] = useDrag({\r\n    type: 'item',\r\n    item: { index },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  const [, dropRef] = useDrop<IComponentItemProps, HTMLDivElement, null>({\r\n    accept: 'item',\r\n    hover: (item, monitor) => {\r\n      if (!ref.current) {\r\n        return;\r\n      }\r\n\r\n      const dragIndex = item.index;\r\n      const hoverIndex = index;\r\n\r\n      if (dragIndex === hoverIndex) {\r\n        return;\r\n      }\r\n\r\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n      const hoverMiddleY =\r\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n      const hoverActualY = monitor.getClientOffset()!.y - hoverBoundingRect.top;\r\n\r\n      if (dragIndex < hoverIndex && hoverActualY < hoverMiddleY) return;\r\n      if (dragIndex > hoverIndex && hoverActualY > hoverMiddleY) return;\r\n\r\n      moveListItem(dragIndex, hoverIndex);\r\n      item.index = hoverIndex;\r\n    },\r\n  });\r\n\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  dragRef(dropRef(ref));\r\n  const opacity = isDragging ? 0 : 1;\r\n\r\n  const { name, price, image } = item;\r\n\r\n  return (\r\n    <div ref={ref} style={{ opacity }}>\r\n      {<DragIcon type=\"primary\" />}\r\n      <ConstructorElement\r\n        text={name}\r\n        price={price}\r\n        thumbnail={image}\r\n        handleClose={() => {\r\n          dispatch({\r\n            type: DEL_COMPONENT,\r\n            item: { price: price, index: index },\r\n          });\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport { useSelector, useDispatch } from '../../types/hooks';\r\nimport { useDrop } from 'react-dnd';\r\nimport {\r\n  ADD_COMPONENT,\r\n  UPDATE_COMPONENT,\r\n  CLEAR_COMPONENTS,\r\n} from '../../services/burger-component/constants';\r\nimport { CONFIRM_ORDER } from '../../services/order/constants';\r\nimport { orderSend } from '../../services/order/actions';\r\nimport styles from './burger-components.module.css';\r\nimport OrderDetails from './order-details/order-details';\r\nimport { ComponentItem } from './component-item/component-item';\r\nimport Modal from '../modal/modal';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport { getCookie } from '../../utils/cookie';\r\nimport {\r\n  Button,\r\n  CurrencyIcon,\r\n  ConstructorElement,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { TDataItem } from '../../types/data';\r\n\r\n//BurgerComponents- компонент для корзины заказа\r\nconst BurgerComponents: React.FC = () => {\r\n  const bun = useSelector(store => store.component.bun);\r\n  const components = useSelector(store => store.component.components);\r\n  const totalSum = useSelector(store => store.component.totalSum);\r\n  const confirmOrder = useSelector(store => store.order.confirmOrder);\r\n  const dispatch = useDispatch();\r\n  const [isOpenModal, setIsOpenModal] = useState<boolean>(false);\r\n  const [user, isLoadedUser] = useAuth();\r\n  const token = getCookie('accessToken');\r\n  const handleClick = () => {\r\n    setIsOpenModal(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (confirmOrder) {\r\n      const idIngredients = components.map((x: TDataItem) => x._id);\r\n      const idBun = bun!._id;\r\n      dispatch(orderSend(idIngredients, idBun, token!));\r\n      dispatch({\r\n        type: CLEAR_COMPONENTS,\r\n      });\r\n    }\r\n  }, [dispatch, confirmOrder]);\r\n\r\n  const onClickOrder = () => {\r\n    if (user && isLoadedUser) {\r\n      if (!bun) {\r\n        alert('Для оформления заказа выберите булку');\r\n      } else {\r\n        dispatch({\r\n          type: CONFIRM_ORDER,\r\n          value: true,\r\n        });\r\n        setIsOpenModal(true);\r\n      }\r\n    } else {\r\n      setIsOpenModal(true);\r\n    }\r\n  };\r\n\r\n  const [, ingredientRef] = useDrop({\r\n    accept: 'ingredient',\r\n    drop: (item) => {\r\n      dispatch({\r\n        type: ADD_COMPONENT,\r\n        item,\r\n      });\r\n    },\r\n  });\r\n\r\n  const moveListItem = useCallback(\r\n    (dragIndex, hoverIndex) => {\r\n      dispatch({\r\n        type: UPDATE_COMPONENT,\r\n        value: { dragIndex, hoverIndex },\r\n      });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className={`mt-25 ${styles.panel}`} ref={ingredientRef}>\r\n        <ConstructorElement\r\n          type=\"top\"\r\n          isLocked={true}\r\n          text={bun ? `${bun.name} (верх)` : 'Пожалуйста, выберите булку'}\r\n          price={bun ? bun.price : 0}\r\n          thumbnail={bun ? bun.image : 'images/default-bun.svg'}\r\n        />\r\n\r\n        <ul className={`pr-8 ${styles.componentList}`}>\r\n          {components.map((x: TDataItem, index: number) => {\r\n            return (\r\n              <li key={x.key}>\r\n                <ComponentItem\r\n                  item={x}\r\n                  index={index}\r\n                  moveListItem={moveListItem}\r\n                />\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n\r\n        <ConstructorElement\r\n          type=\"bottom\"\r\n          isLocked={true}\r\n          text={bun ? `${bun.name} (низ)` : 'Пожалуйста, выберите булку'}\r\n          price={bun ? bun.price : 0}\r\n          thumbnail={bun ? bun.image : 'images/default-bun.svg'}\r\n        />\r\n        <section className={`mt-5 ${styles.totalPrice}`}>\r\n          <span className=\"text text_type_digits-medium mr-10\">\r\n            {totalSum} <CurrencyIcon type=\"primary\" />\r\n          </span>\r\n          <Button onClick={onClickOrder} type=\"primary\" size=\"large\">\r\n            Оформить заказ\r\n          </Button>\r\n        </section>\r\n      </div>\r\n\r\n      <Modal\r\n        isOpen={isOpenModal}\r\n        onClick={handleClick}\r\n        title={''}\r\n        onCloseClick={handleClick}\r\n      >\r\n        <OrderDetails />\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BurgerComponents;\r\n","import { useSelector, useDispatch } from '../../types/hooks';\r\nimport { useEffect } from 'react';\r\nimport style from './main.module.css';\r\nimport BurgerIngredients from '../../components/burger-ingredients/burger-ingredients';\r\nimport BurgerComponents from '../../components/burger-components/burger-components';\r\nimport { loadIngredients } from '../../services/ingredient/actions';\r\n\r\nexport const MainPage: React.FC = () => {\r\n  const isLoadingIngredient = useSelector(\r\n    store => store.ingredient.isLoadingIngredient\r\n  );\r\n  const hasErrorIngredient = useSelector(\r\n    store => store.ingredient.hasErrorIngredient\r\n  );\r\n  const ingredients = useSelector(store => store.ingredient.ingredients);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(loadIngredients());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <main className={`mb-6 ${style.main}`}>\r\n      {isLoadingIngredient && 'Загрузка...'}\r\n      {hasErrorIngredient && 'Произошла ошибка'}\r\n      {!isLoadingIngredient && !hasErrorIngredient && ingredients.length > 0 && (\r\n        <>\r\n          <BurgerIngredients />\r\n          <BurgerComponents />\r\n        </>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n","export const UPDATE_PROFILE_SUCCESS:'UPDATE_PROFILE_SUCCESS' = 'UPDATE_PROFILE_SUCCESS';\r\nexport const UPDATE_PROFILE_FAILED: 'UPDATE_PROFILE_FAILED' = 'UPDATE_PROFILE_FAILED';","import { AppDispatch, AppThunk } from '../../types';\r\nimport { TUser } from '../../types/data';\r\nimport { updateProfile } from '../api';\r\nimport {UdateProfileFailedAction, UdateProfileSuccessAction} from './action-type'\r\n\r\n\r\nexport const updateProfileUser: AppThunk = (value: Partial<TUser>, token: string) => {\r\n  return function (dispatch: AppDispatch) {\r\n    const fetchUpdateProfile = async () => {\r\n      const res = await updateProfile(value, token);\r\n      dispatch(UdateProfileSuccessAction(res.user));\r\n      return res;\r\n    };\r\n    fetchUpdateProfile().catch(() =>\r\n      dispatch(UdateProfileFailedAction()),\r\n\r\n    );\r\n  };\r\n}\r\n","import { TUser } from '../../types/data';\r\nimport { UPDATE_PROFILE_FAILED, UPDATE_PROFILE_SUCCESS } from './constants';\r\n\r\nexport interface IUdateProfileFailed {\r\n  readonly type: typeof UPDATE_PROFILE_FAILED;\r\n}\r\n\r\nexport interface IUdateProfileSuccess {\r\n  readonly type: typeof UPDATE_PROFILE_SUCCESS,\r\n  user: Partial<TUser>;\r\n}\r\n\r\nexport type TProfile = IUdateProfileFailed | IUdateProfileSuccess\r\n\r\nexport const UdateProfileFailedAction = (): IUdateProfileFailed => ({\r\n    type: UPDATE_PROFILE_FAILED,\r\n  });\r\n\r\n  export const UdateProfileSuccessAction = (user: Partial<TUser>): IUdateProfileSuccess => ({\r\n    type: UPDATE_PROFILE_SUCCESS,\r\n    user\r\n  });","import {\r\n  Input,\r\n  Button,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useState, useEffect } from 'react';\r\nimport { updateProfileUser } from '../../services/profile/actions';\r\nimport { useSelector, useDispatch } from '../../types/hooks';\r\nimport styles from './profile.module.css';\r\nimport { getCookie } from '../../utils/cookie';\r\nimport { TUser } from '../../types/data';\r\n\r\ntype TDisabled = {\r\n  name: boolean;\r\n  email: boolean;\r\n  password: boolean;\r\n}\r\n\r\nexport const Profile: React.FC = () => {\r\n  const user = useSelector(store => store.auth.user);\r\n \r\n  const [value, setValue] = useState<TUser>({\r\n    name: user!.name,\r\n    email: user!.email,\r\n    password: '',\r\n  });\r\n  \r\n  const [disabled, setDisabled] = useState<TDisabled>({\r\n    name: true,\r\n    email: true,\r\n    password: true,\r\n  });\r\n  const [isSaveVisible, setisSaveVisible] = useState<boolean>(false);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (isSaveVisible) {\r\n      const button = document.getElementById('saveButton');\r\n      button?.children[0].setAttribute('type', 'submit');\r\n    }\r\n  }, [isSaveVisible]);\r\n\r\n  const onSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const newValue:Partial<TUser> = {};\r\n    if (user!.name !== value.name) {\r\n      newValue.name = value.name;\r\n    }\r\n    if (user!.email !== value.email) {\r\n      newValue.email = value.email;\r\n    }\r\n    if (value.password !== '') {\r\n      newValue.password = value.password;\r\n    }\r\n    const token = getCookie('accessToken');\r\n    dispatch(updateProfileUser(newValue, token!));\r\n    setDisabled({ name: true, email: true, password: true });\r\n    setisSaveVisible(false);\r\n  };\r\n\r\n  const onClickCancel = (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    setValue({ name: user!.name, email: user!.email, password: '' });\r\n    setDisabled({ name: true, email: true, password: true });\r\n    setisSaveVisible(false);\r\n  };\r\n  \r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue({ ...value, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onIconClickName = () => {\r\n    setDisabled({ ...disabled, name: !disabled.name });\r\n    setisSaveVisible(true);\r\n  };\r\n  const onIconClickEmail = () => {\r\n    setDisabled({ ...disabled, email: !disabled.email });\r\n    setisSaveVisible(true);\r\n  };\r\n  const onIconClickPassword = () => {\r\n    setDisabled({ ...disabled, password: !disabled.password });\r\n    setisSaveVisible(true);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className={styles.form}>\r\n      <Input\r\n        type=\"text\"\r\n        placeholder={'Имя'}\r\n        onChange={onChange}\r\n        disabled={disabled.name}\r\n        value={value.name}\r\n        name={'name'}\r\n        size={'default'}\r\n        icon={'EditIcon'}\r\n        onIconClick={onIconClickName}\r\n      />\r\n      <Input\r\n        type=\"email\"\r\n        placeholder={'Email'}\r\n        onChange={onChange}\r\n        value={value.email}\r\n        disabled={disabled.email}\r\n        name={'email'}\r\n        size={'default'}\r\n        icon={'EditIcon'}\r\n        onIconClick={onIconClickEmail}\r\n      />\r\n      <Input\r\n        type=\"password\"\r\n        placeholder={'password'}\r\n        onChange={onChange}\r\n        value={value.password}\r\n        disabled={disabled.password}\r\n        name={'password'}\r\n        size={'default'}\r\n        icon={'EditIcon'}\r\n        onIconClick={onIconClickPassword}\r\n      />\r\n\r\n      {isSaveVisible ? (\r\n        <div className={styles.button}>\r\n          <span id=\"saveButton\">\r\n            <Button type=\"primary\" size=\"small\">\r\n              Сохранить\r\n            </Button>\r\n          </span>\r\n          <Button type=\"secondary\" size=\"medium\" onClick={onClickCancel}>\r\n            Отмена\r\n          </Button>\r\n        </div>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n","import styles from './profile.module.css';\r\nimport { getCookie } from '../../utils/cookie';\r\nimport { logOutUser } from '../../services/auth/actions';\r\nimport { NavLink, Switch, Route } from 'react-router-dom';\r\nimport { Order } from '..';\r\nimport { useDispatch } from '../../types/hooks';\r\nimport { Profile } from '../../components/profile/profile';\r\n\r\nexport const ProfilePage: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const onClickExit = (e: React.SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const accessToken = getCookie('accessToken');\r\n    const refreshToken = getCookie('refreshToken');\r\n    dispatch(logOutUser(accessToken!, refreshToken!));\r\n  };\r\n\r\n  return (\r\n    <div className={`mt-25 ml-5 ${styles.wrapper}`}>\r\n      <div\r\n        className={`mr-15 text text_type_main-medium ${styles.itemsProfile}`}\r\n      >\r\n        <p>\r\n          <NavLink\r\n            to=\"/profile\"\r\n            className=\"text_color_inactive\"\r\n            activeStyle={{ color: 'white' }}\r\n            exact={true}\r\n          >\r\n            Профиль\r\n          </NavLink>\r\n        </p>\r\n        <p>\r\n          <NavLink\r\n            to=\"/profile/order\"\r\n            className=\"text_color_inactive\"\r\n            activeStyle={{ color: 'white' }}\r\n            exact={true}\r\n          >\r\n            История заказов\r\n          </NavLink>\r\n        </p>\r\n        <p className=\"text_color_inactive\" onClick={onClickExit}>\r\n          Выход\r\n        </p>\r\n        <p className=\"mt-20 text text_type_main-default text_color_inactive\">\r\n          В этом разделе вы можете изменить свои персональные данные\r\n        </p>\r\n      </div>\r\n      <Switch>\r\n        <Route path=\"/profile\" component={Profile} exact={true} />\r\n        <Route path=\"/profile/order\" component={Order} exact={true} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  Input,\r\n  Button,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from '../types/hooks';\r\nimport { registrationUser } from '../services/auth/actions';\r\nimport { Form } from '../components/form/form';\r\nimport { TUser } from '../types/data';\r\n\r\nexport const RegistrationPage: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(store => store.auth.user);\r\n  const [value, setValue] = useState<TUser>({ name: '', email: '', password: '' });\r\n  const [isPasswordShow, setIsPasswordShow] = useState<boolean>(false);\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue({ ...value, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onIconClick = () => {\r\n    setIsPasswordShow(!isPasswordShow);\r\n  };\r\n\r\n  const onSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    dispatch(registrationUser(value));\r\n  };\r\n\r\n  if (user) {\r\n    return <Redirect to={{ pathname: '/' }} />;\r\n  }\r\n\r\n  return (\r\n      <Form onSubmit={onSubmit} idButton='enterButton'>\r\n        <h1 className=\"text text_type_main-medium\">Регистрация</h1>\r\n        <Input\r\n          type=\"text\"\r\n          placeholder={'Имя'}\r\n          onChange={onChange}\r\n          value={value.name}\r\n          name={'name'}\r\n          size={'default'}\r\n        />\r\n        <Input\r\n          type=\"email\"\r\n          placeholder={'Email'}\r\n          onChange={onChange}\r\n          value={value.email}\r\n          name={'email'}\r\n          size={'default'}\r\n        />\r\n        <Input\r\n          type={isPasswordShow ? 'text' : 'password'}\r\n          placeholder={'пароль'}\r\n          onChange={onChange}\r\n          value={value.password}\r\n          name={'password'}\r\n          size={'default'}\r\n          icon={'ShowIcon'}\r\n          onIconClick={onIconClick}\r\n        />\r\n        <span id=\"enterButton\">\r\n          <Button type=\"primary\" size=\"large\" onClick={onSubmit}>\r\n            Зарегистрироваться\r\n          </Button>\r\n        </span>\r\n        <span className=\"mt-20 text text_type_main-default text_color_inactive\">\r\n          Уже зарегистрированы?\r\n          <Link to=\"/login\" className=\"text_color_accent\">\r\n            &nbsp;Войти\r\n          </Link>\r\n        </span>\r\n      </Form>\r\n  );\r\n};\r\n","import {\r\n  Input,\r\n  Button,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { CLEAR_RESET_PASSWORD } from '../services/reset-password/constants';\r\nimport { resetPasswordUser } from '../services/reset-password/actions';\r\nimport { useDispatch, useSelector } from '../types/hooks';\r\nimport { Form } from '../components/form/form';\r\n\r\ntype TValueForm = {\r\n  password: string;\r\n  token: string;\r\n};\r\nexport const ResetPasswordPage: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const [value, setValue] = useState<TValueForm>({ password: '', token: '' });\r\n  const isResetPassword = useSelector(\r\n    (store) => store.password.isResetPassword\r\n  );\r\n  const isRecoverEmail = useSelector(store => store.password.isRecoverEmail);\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue({ ...value, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  if (!isRecoverEmail) {\r\n    return <Redirect to={'/profile'} />;\r\n  }\r\n  const onSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    dispatch(resetPasswordUser(value));\r\n  };\r\n\r\n  if (isResetPassword) {\r\n    setTimeout(() => dispatch({ type: CLEAR_RESET_PASSWORD }), 0);\r\n    return <Redirect to={'/login'} />;\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={onSubmit} idButton=\"saveButton\">\r\n      <h1 className=\"text text_type_main-medium\">Восстановление пароля</h1>\r\n      <Input\r\n        type=\"password\"\r\n        placeholder={'введите новый пароль'}\r\n        onChange={onChange}\r\n        value={value.password}\r\n        name={'password'}\r\n        size={'default'}\r\n        icon={'ShowIcon'}\r\n      />\r\n      <Input\r\n        type=\"text\"\r\n        placeholder={'Введите код из письма'}\r\n        onChange={onChange}\r\n        value={value.token}\r\n        name={'token'}\r\n        size={'default'}\r\n      />\r\n      <span id=\"saveButton\">\r\n        <Button type=\"primary\" size=\"large\">\r\n          Сохранить\r\n        </Button>\r\n      </span>\r\n    </Form>\r\n  );\r\n};\r\n","export const WS_CONNECTION_START: 'WS_CONNECTION_START'= 'WS_CONNECTION_START';\r\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\r\nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\r\nexport const WS_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED' = 'WS_CONNECTION_CLOSED';\r\nexport const WS_GET_MESSAGE: 'WS_GET_MESSAGE' = 'WS_GET_MESSAGE';\r\n","import styles from './images.module.css';\r\nimport React from 'react';\r\nimport { TDataItem } from '../../../types/data';\r\nimport { v4 as generateKey } from 'uuid';\r\ninterface IimagesProps {\r\n  ingredients: TDataItem[];\r\n  orderIngredients: string[];\r\n}\r\nexport const Images: React.FC<IimagesProps> = ({\r\n  ingredients,\r\n  orderIngredients,\r\n}) => {\r\n  const maxElemImgs = 5;\r\n  const countTake = orderIngredients.length > maxElemImgs ? maxElemImgs : orderIngredients.length;\r\n  const countRest = orderIngredients.length - countTake;\r\n  const showCount = countRest > 0;\r\n\r\n  const mainIngridients = orderIngredients.slice(0, countTake);\r\n\r\n  const getImageForElement = (id: string) => {\r\n    const ingridient = ingredients.find((x) => x._id === id);\r\n    return ingridient!.image_mobile;\r\n  }\r\n\r\n  const elementWithCount = showCount\r\n    ? orderIngredients.slice(maxElemImgs, maxElemImgs + 1)[0]\r\n    : null;\r\n\r\n\r\n  return (\r\n    <span className={styles.images}>\r\n      \r\n      {showCount && (\r\n        <div className={styles.image}>\r\n          <span className= {`${styles.imgPrew} ${styles.imgOverlay}`} >\r\n              <span className={`text text_type_main-default ${styles.counter}`}>\r\n                +{countRest}\r\n              </span>\r\n            <img className={styles.img} src={getImageForElement(elementWithCount!)} alt=\"\" />\r\n          </span>\r\n        </div>\r\n      )}\r\n      \r\n      {mainIngridients.map((x) => (\r\n        <div className={styles.image} key={generateKey()}>\r\n          <span className={styles.imgPrew}>\r\n            <img className={styles.img} src={getImageForElement(x)} alt=\"\" />\r\n          </span>\r\n        </div>\r\n      ))}\r\n\r\n    </span>\r\n  );\r\n};\r\n","import { EStatus } from '../types/data';\r\nexport const formatStatusOrder = (status: EStatus) => {\r\n  switch (status) {\r\n    case EStatus.Created: {\r\n      return 'Создан';\r\n    }\r\n    case EStatus.Done: {\r\n      return 'Готово';\r\n    }\r\n    case EStatus.Pending: {\r\n      return 'Готовится';\r\n    }\r\n    default: {\r\n      return '';\r\n    }\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from '../../types/hooks';\r\nimport { useEffect } from 'react';\r\nimport { TDataItem, TOrders } from '../../types/data';\r\nimport styles from './orders-feed.module.css';\r\nimport { loadIngredients } from '../../services/ingredient/actions';\r\nimport { Images } from './images/images';\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link } from 'react-router-dom';\r\nimport { getFormattedDate } from '../../utils/formatDate';\r\nimport { formatStatusOrder } from '../../utils/statusOrder';\r\ninterface IOrderFeedProps {\r\n  orders: TOrders[];\r\n  url: string;\r\n}\r\nexport const OrdersFeed: React.FC<IOrderFeedProps> = ({ orders, url }) => {\r\n  const ingredients = useSelector((store) => store.ingredient.ingredients);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(loadIngredients());\r\n  }, [dispatch]);\r\n\r\n  if (ingredients.length === 0) {\r\n    return null;\r\n  }\r\n  const totalPrice = (arr: string[]) => {\r\n    const totalPrice = arr.reduce((total, curr) => {\r\n      const { price } = ingredients.find((x: TDataItem) => x._id === curr)!;\r\n      total += price;\r\n      return total;\r\n    }, 0);\r\n    return totalPrice;\r\n  };\r\n\r\n  if (!orders) {\r\n    return null;\r\n  }\r\n  orders.forEach((x) => {\r\n    x.ingredients = x.ingredients.filter((i)=> i);\r\n  });\r\n  \r\n  orders.sort((a, b) =>\r\n    a.createdAt == b.createdAt ? 0 : a.createdAt > b.createdAt ? -1 : 1\r\n  );\r\n\r\n  return (\r\n    <ul className={styles.orders}>\r\n      {orders.map((x: TOrders) => (\r\n        <Link\r\n          to={{\r\n            pathname: `/${url}/${x.number}`,\r\n            state: { modal: true },\r\n          }}\r\n          className={styles.link}\r\n          key={x._id}\r\n        >\r\n          <li className={`pl-6 pr-6 pb-6 pt-6 mt-4 ${styles.order}`}>\r\n            <span className={styles.row}>\r\n              <span className=\"text text_type_digits-default\">{`#${x.number}`}</span>\r\n              <span className=\"text text_type_main-default text_color_inactive\">\r\n                {getFormattedDate(x.createdAt)}\r\n              </span>\r\n            </span>\r\n            <span className=\"mt-6 text text_type_main-medium\">{x.name}</span>\r\n            <span className=\"mt-2 text text_type_main-default\">\r\n              {formatStatusOrder(x.status)}\r\n            </span>\r\n            <span className={`mt-6 ${styles.row}`}>\r\n              <Images\r\n                ingredients={ingredients}\r\n                orderIngredients={x.ingredients}\r\n              />\r\n              <span className={`${styles.price} text text_type_digits-default`}>\r\n                <span>{totalPrice(x.ingredients)}</span>\r\n                <span className=\"ml-2\">\r\n                  <CurrencyIcon type=\"primary\" />\r\n                </span>\r\n              </span>\r\n            </span>\r\n          </li>\r\n        </Link>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from '../../types/hooks';\r\nimport styles from './orders.module.css';\r\nimport {\r\n  WS_CONNECTION_START,\r\n  WS_CONNECTION_CLOSED,\r\n} from '../../services/websoket/constants';\r\nimport { OrdersFeed } from '../../components/orders-feed/orders-feed';\r\nimport { TOrders } from '../../types/data';\r\n\r\nexport function Order() {\r\n  const message = useSelector(store => store.orders.messages);\r\n  const [orders, setOrders] = useState<TOrders[]>([]);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: WS_CONNECTION_START, withToken: true });\r\n    return () => {\r\n      dispatch({ type: WS_CONNECTION_CLOSED });\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      setOrders(message!.orders!);\r\n    }\r\n  }, [message]);\r\n\r\n  if (!message) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className={styles.orders}>\r\n      <div className={`${styles.orderWrap}`}>\r\n        <OrdersFeed orders={orders} url=\"profile/order\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { getCookie } from \"../../utils/cookie\";\r\nimport { wsActions as wsActionTypes } from \"../store\";\r\nimport { Middleware } from \"redux\";\r\nimport { RootState } from \"../../types\";\r\nexport const socketMiddleware = (wsUrl: string, wsActions: typeof wsActionTypes ): Middleware<{}, RootState> => {\r\n    return ((store) => {\r\n        let socket: WebSocket | null = null;\r\n    return next => (action) => {\r\n      const { dispatch } = store;\r\n      const { type, payload, withToken } = action;\r\n      const { wsInit, onOpen, onClose, onError, onMessage } = wsActions;  \r\n      const accessCookie = getCookie('accessToken');\r\n      const token = withToken ? accessCookie : '';\r\n\r\n      if (type === wsInit) {\r\n            socket = new WebSocket(withToken ? `${wsUrl}?token=${token}` : `${wsUrl}/all`);\r\n      }\r\n      if (socket) {\r\n        socket.onopen = event => {\r\n          dispatch({ type: onOpen, payload: event });\r\n        };\r\n        socket.onerror = event => {\r\n          dispatch({ type: onError, payload: event });\r\n        };\r\n        socket.onmessage = event => {\r\n          const { data } = event;\r\n          const parsedData = JSON.parse(data);\r\n          dispatch({ type: onMessage, payload: parsedData });\r\n        };\r\n        socket.onclose = event => {\r\n          dispatch({ type: onClose, payload: event });\r\n        };\r\n      }\r\n      next(action);\r\n    };\r\n    }) \r\n}; ","import styles from './page-not-found.module.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const PageNotFound: React.FC = () => {\r\n  return (\r\n    <div className={styles.wrap}>\r\n      <p className=\"text_type_main-large\">Страница не найдена</p>\r\n      <Link to=\"/\" className={` text text_type_main-medium ${styles.link}`}>\r\n        {' '}\r\n        Венутся на главную{' '}\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { TOrders } from '../../types/data';\r\nimport styles from './orders-stats.module.css';\r\nimport { v4 as generateKey } from 'uuid';\r\n\r\ninterface IOrdersStatsProps {\r\n  orders: TOrders[];\r\n  total: number;\r\n  totalDay: number;\r\n}\r\nexport const OrdersStats: React.FC<IOrdersStatsProps> = ({\r\n  orders,\r\n  total,\r\n  totalDay,\r\n}) => {\r\n  if (!orders) {\r\n    return null;\r\n  }\r\n  const doneOrders = orders.filter((x) => x.status === 'done');\r\n  const inWorkOrders = orders.filter((x) => x.status === 'pending').slice(0, 6);\r\n\r\n  const getAggregate = <T,>(arr: T[], count: number) => {\r\n    return arr.reduce<T[][]>((acc, cur) => {\r\n      if (acc.length === 0) {\r\n        acc.push([]);\r\n      }\r\n\r\n      const curArr = acc[acc.length - 1];\r\n\r\n      curArr.push(cur);\r\n\r\n      if (curArr.length === count) {\r\n        acc.push([]);\r\n      }\r\n      return acc;\r\n    }, []);\r\n  };\r\n\r\n  const countAggregate = 10;\r\n  const doneOrdersAggregate = getAggregate(doneOrders, countAggregate);\r\n  const inWorkOrdersAggregate = getAggregate(inWorkOrders, countAggregate);\r\n\r\n  return (\r\n    <div className={styles.wrap}>\r\n      <div className={styles.orders}>\r\n        <div className={styles.ordersColumn}>\r\n          <span className=\"text text_type_main-medium mb-8\">Готовы:</span>\r\n          <div className={styles.rowWrap}>\r\n            {doneOrdersAggregate.map((columnArr) => (\r\n              <div className={styles.columnWrap} key={generateKey()}>\r\n                <div className={styles.listColumn}>\r\n                  {columnArr.map((x) => (\r\n                    <span\r\n                      className={`text text_type_digits-default mt-2 ${styles.doneNumber}`}\r\n                      key={x._id}\r\n                    >\r\n                      {x.number}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className={styles.ordersColumn}>\r\n          <span className=\"text text_type_main-medium mb-8\">В работе:</span>\r\n          <div className={styles.rowWrap}>\r\n            {inWorkOrdersAggregate.map((columnArr) => (\r\n              <div className={styles.columnWrap} key={generateKey()}>\r\n                <div className={styles.listColumn}>\r\n                  {columnArr.map((x) => (\r\n                    <span\r\n                      className={`text text_type_digits-default mt-2 ${styles.doneNumber}`}\r\n                      key={x._id}\r\n                    >\r\n                      {x.number}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <span className=\"text text_type_main-medium mt-15\">\r\n        Выполнено за все время:\r\n      </span>\r\n      <span className={`text text_type_digits-large ${styles.count}`}>\r\n        {total}\r\n      </span>\r\n      <span className=\"text text_type_main-medium mt-15\">\r\n        Выполнено за сегодня:\r\n      </span>\r\n      <span className={`text text_type_digits-large ${styles.count}`}>\r\n        {totalDay}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n","import { OrdersFeed } from '../../components/orders-feed/orders-feed';\r\nimport { OrdersStats } from '../../components/orders-stats/orders-stats';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from '../../types/hooks';\r\nimport { WS_CONNECTION_START, WS_CONNECTION_CLOSED } from '../../services/websoket/constants';\r\nimport styles from './feed.module.css';\r\nimport { TOrders } from '../../types/data';\r\n\r\nexport const FeedPage = () => {\r\n  const message = useSelector(store => store.orders.messages);\r\n  const [orders, setOrders] = useState<TOrders[]>([]);\r\n  const [total, setTotal] = useState<number>(0)\r\n  const [totalDay, setTotalDay] = useState<number>(0)\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: WS_CONNECTION_START, withToken: false });\r\n    return ()=> {\r\n      dispatch({type: WS_CONNECTION_CLOSED})\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (message) {\r\n      setOrders(message!.orders!);\r\n      setTotal(message.total);\r\n      setTotalDay(message.totalToday)\r\n    }\r\n  }, [message]);\r\n\r\n  return (\r\n    <>\r\n    <h2 className=\"text text_type_main-large mt-10 ml-10\">Лента заказов</h2>\r\n    <div className={styles.wrap}>\r\n      <div className={`mt-5 mr-15 ${styles.orderWrap}`}>\r\n        <div className={`mr-2 ${styles.orders}`}>\r\n          <OrdersFeed orders={orders} url='feed'/>\r\n        </div>\r\n      </div>\r\n      <div className={` mt-5 ${styles.stats}`}>\r\n        <OrdersStats orders={orders} total={total} totalDay={totalDay}/>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n","import style from './app.module.css';\r\nimport AppHeader from '../app-Header/app-Header';\r\nimport { DndProvider } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\nimport { Switch, Route, useLocation, useHistory } from 'react-router-dom';\r\nimport {Location, History } from 'history';\r\nimport { ProtectedRoute } from '../routes/protected-route';\r\nimport IngredientDetails from '../burger-ingredients/ingredient-details/ingredient-details';\r\nimport { FeedOrderDetails } from '../orders-feed/feed-orders-detalis/feed-order-details';\r\nimport { ModalIngredient } from '../burger-ingredients/modal-ingredient';\r\nimport { ModalOrderFeed } from '../orders-feed/modal-feed-order';\r\nimport {RedirectAuthRoute} from '../routes/redirect-auth-route';\r\nimport {\r\n  MainPage,\r\n  LoginPage,\r\n  RegistrationPage,\r\n  ForgotPasswordPage,\r\n  ResetPasswordPage,\r\n  ProfilePage,\r\n  PageNotFound,\r\n  FeedPage\r\n} from '../../pages/index';\r\n\r\n\r\ninterface LocationState {\r\n  modal: boolean,\r\n  prevPath: Location\r\n};\r\n\r\nconst App: React.FC = () => {\r\n  const history = useHistory<History>();\r\n  const location = useLocation<LocationState>();\r\n  const action = history.action === 'PUSH' || history.action === 'REPLACE';\r\n  const isModal = action && location.state && location.state.modal;\r\n  \r\n  return (\r\n    <DndProvider backend={HTML5Backend}>\r\n      <div className={style.app}>\r\n        <AppHeader />\r\n        <Switch location={isModal ? location.state.prevPath : location}>\r\n          <Route path=\"/\" component={MainPage} exact={true} />\r\n          <Route path=\"/register\" exact={true} component={RegistrationPage} />\r\n          <Route path=\"/login\" exact={true} component={LoginPage} />\r\n          <Route path=\"/reset\" exact={true} component={ResetPasswordPage} />\r\n          <Route path=\"/feed\" exact={true} component={FeedPage} />\r\n          <Route path=\"/ingredient/:id\" exact={true} component={IngredientDetails}/>\r\n          <Route path=\"/feed/:id\" exact={true} component={FeedOrderDetails}/>\r\n          \r\n          <ProtectedRoute path=\"/profile/order/:id\" exact={true}>\r\n            <FeedOrderDetails />\r\n          </ProtectedRoute>\r\n\r\n          <RedirectAuthRoute\r\n            path=\"/forgot-password\"\r\n            exact={true}\r\n            component={ForgotPasswordPage}\r\n            redirect=\"/profile\"\r\n          />\r\n          <ProtectedRoute path=\"/profile\">\r\n            <ProfilePage />\r\n          </ProtectedRoute>\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n        {isModal && (\r\n          <Route exact path=\"/ingredient/:id\" component={ModalIngredient} />\r\n        )}\r\n        {isModal && (\r\n          <Route exact path=\"/feed/:id\" component={ModalOrderFeed} />\r\n        )}\r\n        {isModal && (\r\n          <Route exact path=\"/profile/order/:id\" component={ModalOrderFeed} />\r\n        )}\r\n      </div>\r\n    </DndProvider>\r\n  );\r\n}\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { TInitialState } from \"../types/data\";\r\n\r\nexport const initialState: TInitialState = {\r\n  //#region ingredient\r\n  isLoadingIngredient: false,\r\n  hasErrorIngredient: false,\r\n  ingredients: [],\r\n  //#endregion\r\n\r\n  //region order\r\n  order: null,\r\n  totalSum: 0,\r\n  bun: null,\r\n  components: [],\r\n  confirmOrder: false,\r\n  isLoadingOrder: false,\r\n  hasErrorOrder: false,\r\n  //#endregion\r\n\r\n  user: null,\r\n  isRecoverEmail: false,\r\n  isResetPassword: false,\r\n\r\n  wsConnected: false,\r\n  messages: null\r\n    \r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { ingredientReducer } from './ingredient/reducers';\r\nimport { componentReducer } from './burger-component/reducers';\r\nimport { orderReducer } from './order/reducers';\r\nimport { authReducer } from './auth/reducers';\r\nimport { passwordReducer } from './reset-password/reducers';\r\nimport { profileReducer } from './profile/reducers';\r\nimport {wsReducer} from './websoket/redusers'\r\n\r\nexport const rootReducer = combineReducers({\r\n  ingredient: ingredientReducer,\r\n  component: componentReducer,\r\n  order: orderReducer,\r\n  auth: authReducer,\r\n  password: passwordReducer,\r\n  profile: profileReducer,\r\n  orders: wsReducer\r\n});\r\n","import { initialState } from '../inital-data';\r\nimport { TIngredient } from './action-type';\r\nimport {\r\n  GET_INGREDIENT_FAILED,\r\n  GET_INGREDIENT_REQUEST,\r\n  GET_INGREDIENT_SUCCESS,\r\n} from './constants';\r\n\r\nexport const ingredientReducer = (state = initialState, action: TIngredient) => {\r\n  switch (action.type) {\r\n    case GET_INGREDIENT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        ingredients: action.data,\r\n        isLoadingIngredient: false,\r\n      };\r\n    }\r\n    case GET_INGREDIENT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        hasErrorIngredient: false,\r\n        isLoadingIngredient: true,\r\n      };\r\n    }\r\n    case GET_INGREDIENT_FAILED: {\r\n      return {\r\n        ...state,\r\n        hasErrorIngredient: true,\r\n        isLoadingIngredient: false,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { initialState } from '../inital-data';\r\nimport { v4 as generateKey } from 'uuid';\r\nimport {\r\n  ADD_COMPONENT,\r\n  DEL_COMPONENT,\r\n  UPDATE_COMPONENT,\r\n  CLEAR_COMPONENTS,\r\n} from './constants';\r\nimport { TComponent } from './action-type';\r\n\r\nexport const componentReducer = (state = initialState, action: TComponent) => {\r\n  switch (action.type) {\r\n    case ADD_COMPONENT: {\r\n      if (action.item.type === 'bun') {\r\n        return {\r\n          ...state,\r\n          bun: action.item,\r\n          totalSum:\r\n            state.totalSum -\r\n            (state.bun ? state.bun.price * 2 : 0) +\r\n            action.item.price * 2,\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          components: [\r\n            ...state.components,\r\n            {\r\n              ...action.item,\r\n              key: generateKey(),\r\n            },\r\n          ],\r\n          totalSum: state.totalSum + action.item.price,\r\n        };\r\n      }\r\n    }\r\n    case DEL_COMPONENT: {\r\n      let newComponents = [...state.components];\r\n      newComponents.splice(action.item.index, 1);\r\n\r\n      return {\r\n        ...state,\r\n        totalSum: state.totalSum - action.item.price,\r\n        components: newComponents,\r\n      };\r\n    }\r\n    case UPDATE_COMPONENT: {\r\n      const dragItem = state.components[action.value.dragIndex];\r\n      let newComponents = [...state.components];\r\n      newComponents.splice(action.value.dragIndex, 1);\r\n      newComponents.splice(action.value.hoverIndex, 0, dragItem);\r\n      return {\r\n        ...state,\r\n        components: newComponents,\r\n      };\r\n    }\r\n    case CLEAR_COMPONENTS: {\r\n      return {\r\n        ...state,\r\n        components: [],\r\n        bun: null,\r\n        totalSum: 0,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { initialState } from '../inital-data';\r\nimport { TOrder } from './action-type';\r\nimport {\r\n  SEND_ORDER_SUCCESS,\r\n  SEND_ORDER_REQUEST,\r\n  SEND_ORDER_FAILED,\r\n  GET_ORDER_SUCCESS,\r\n  GET_ORDER_REQUEST,\r\n  GET_ORDER_FAILED,\r\n  CONFIRM_ORDER,\r\n} from './constants';\r\n\r\nexport const orderReducer = (state = initialState, action: TOrder) => {\r\n  switch (action.type) {\r\n    case SEND_ORDER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        order: action.order,\r\n        isLoadingOrder: false,\r\n        confirmOrder: false,\r\n      };\r\n    }\r\n    case SEND_ORDER_REQUEST: {\r\n      return {\r\n        ...state,\r\n        hasErrorOrder: false,\r\n        isLoadingOrder: true,\r\n      };\r\n    }\r\n    case SEND_ORDER_FAILED: {\r\n      return {\r\n        ...state,\r\n        hasErrorOrder: true,\r\n        isLoadingOrder: false,\r\n      };\r\n    }\r\n    case CONFIRM_ORDER: {\r\n      return {\r\n        ...state,\r\n        confirmOrder: action.value,\r\n      };\r\n    }\r\n    case GET_ORDER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        order: action.order,\r\n        isLoadingOrder: false,\r\n        confirmOrder: false,\r\n      };\r\n    }\r\n    case GET_ORDER_REQUEST: {\r\n      return {\r\n        ...state,\r\n        hasErrorOrder: false,\r\n        isLoadingOrder: true,\r\n      };\r\n    }\r\n    case GET_ORDER_FAILED: {\r\n      return {\r\n        ...state,\r\n        hasErrorOrder: true,\r\n        isLoadingOrder: false,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { initialState } from '../inital-data';\r\nimport { setCookie, deleteCookie } from '../../utils/cookie';\r\nimport {\r\n  GET_REG_SUCCESS,\r\n  GET_REG_FAILED,\r\n  GET_AUTH_SUCCESS,\r\n  GET_AUTH_FAILED,\r\n  LOGOUT_SUCCESS,\r\n  LOGOUT_FAILED,\r\n  RESTORE_USER_SUCCESS,\r\n  RESTORE_USER_FAILED,\r\n} from './constants';\r\nimport { TAuth } from './action-type';\r\n\r\nexport const authReducer = (state = initialState, action: TAuth) => {\r\n  switch (action.type) {\r\n    case GET_REG_SUCCESS: {\r\n      const { accessToken, refreshToken } = action;\r\n      setCookie('accessToken', accessToken, { expires: 20 * 60 });\r\n      setCookie('refreshToken', refreshToken, { expires: 30 * 24 * 60 });\r\n      alert('Вы успешно зарегистрировались');\r\n      return {\r\n        ...state,\r\n        user: {\r\n          name: action.name,\r\n          email: action.email,\r\n        },\r\n      };\r\n    }\r\n    case GET_REG_FAILED: {\r\n      alert('Что-то пошло не так, регистрация не успешна');\r\n      return state;\r\n    }\r\n    case GET_AUTH_SUCCESS: {\r\n      const { accessToken, refreshToken } = action;\r\n      setCookie('accessToken', accessToken, { expires: 20 * 60 });\r\n      setCookie('refreshToken', refreshToken, { expires: 30 * 24 * 60 });\r\n      return {\r\n        ...state,\r\n        user: {\r\n          name: action.name,\r\n          email: action.email,\r\n        },\r\n      };\r\n    }\r\n    case GET_AUTH_FAILED: {\r\n      alert('Что-то пошло не так, авторизация не успешна');\r\n      return state;\r\n    }\r\n    case LOGOUT_SUCCESS: {\r\n      deleteCookie('accessToken');\r\n      deleteCookie('refreshToken');\r\n      return {\r\n        ...state,\r\n        user: null,\r\n      };\r\n    }\r\n    case LOGOUT_FAILED: {\r\n      alert('Что-то пошло не так, выйти не удалось');\r\n      return state;\r\n    }\r\n    case RESTORE_USER_SUCCESS: {\r\n      \r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n    }\r\n    case RESTORE_USER_FAILED: {\r\n     console.log('restore user failed')\r\n      return state;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { initialState } from '../inital-data';\r\nimport { TResetPassword } from './action-type';\r\nimport {\r\n  FORGOT_SUCCESS,\r\n  FORGOT_FAILED,\r\n  RESET_SUCCESS,\r\n  RESET_FAILED,\r\n  CLEAR_RESET_PASSWORD,\r\n} from './constants';\r\n\r\nexport const passwordReducer = (state = initialState, action: TResetPassword) => {\r\n  switch (action.type) {\r\n    case FORGOT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        isRecoverEmail: true,\r\n      };\r\n    }\r\n    case FORGOT_FAILED: {\r\n      alert('Что-то пошло не так, не удалось сбросить пароль');\r\n      return state;\r\n    }\r\n    case RESET_SUCCESS: {\r\n      alert('Пароль изменен');\r\n      return {\r\n        ...state,\r\n        isRecoverEmail: false,\r\n        isResetPassword: true,\r\n      };\r\n    }\r\n    case RESET_FAILED: {\r\n      alert('Что-то пошло не так, не удалось задать новый пароль');\r\n      return state;\r\n    }\r\n    case CLEAR_RESET_PASSWORD: {\r\n      return {\r\n        ...state,\r\n        isResetPassword: false,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { initialState } from '../inital-data';\r\nimport { TProfile } from './action-type';\r\nimport { UPDATE_PROFILE_FAILED, UPDATE_PROFILE_SUCCESS } from './constants';\r\n\r\nexport const profileReducer = (state = initialState, action: TProfile) => {\r\n  switch (action.type) {\r\n    case UPDATE_PROFILE_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n    }\r\n    case UPDATE_PROFILE_FAILED: {\r\n      alert('Обновить не удалось');\r\n      return state;\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import {\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_CLOSED,\r\n  WS_GET_MESSAGE,\r\n} from './constants'\r\nimport { initialState } from '../inital-data';\r\nimport { TWs } from './action-type';\r\n\r\n// Создадим редьюсер для WebSocket\r\nexport const wsReducer = (state = initialState, action: TWs) => {\r\n  switch (action.type) {\r\n    // Опишем обработку экшена с типом WS_CONNECTION_SUCCESS\r\n    // Установим флаг wsConnected в состояние true\r\n    case WS_CONNECTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: undefined,\r\n        wsConnected: true,\r\n      };\r\n\r\n    // Опишем обработку экшена с типом WS_CONNECTION_ERROR\r\n    // Установим флаг wsConnected в состояние false и передадим ошибку из action.payload\r\n    case WS_CONNECTION_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        wsConnected: false,\r\n      };\r\n\r\n    // Опишем обработку экшена с типом WS_CONNECTION_CLOSED, когда соединение закрывается\r\n    // Установим флаг wsConnected в состояние false\r\n    case WS_CONNECTION_CLOSED:\r\n      return {\r\n        ...state,\r\n        error: undefined,\r\n        wsConnected: false,\r\n      };\r\n\r\n    // Опишем обработку экшена с типом WS_GET_MESSAGE\r\n    // Обработка происходит, когда с сервера возвращаются данные\r\n    // В messages передадим данные, которые пришли с сервера\r\n    case WS_GET_MESSAGE:\r\n      return {\r\n        ...state,\r\n        error: undefined,\r\n        messages:  action.payload,\r\n      }\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { applyMiddleware, createStore, compose } from 'redux';\r\nimport { rootReducer } from './root-reducer';\r\nimport { socketMiddleware } from './websoket/socketMiddleware';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {\r\n  WS_CONNECTION_CLOSED,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_START,\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_GET_MESSAGE,\r\n} from './websoket/constants';\r\n\r\nconst wsUrl = 'wss://norma.nomoreparties.space/orders';\r\n\r\nexport const wsActions = {\r\n  wsInit: WS_CONNECTION_START,\r\n  onOpen: WS_CONNECTION_SUCCESS,\r\n  onClose: WS_CONNECTION_CLOSED,\r\n  onError: WS_CONNECTION_ERROR,\r\n  onMessage: WS_GET_MESSAGE,\r\n};\r\n\r\nconst composeEnhancers =\r\n  (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(thunkMiddleware, socketMiddleware(wsUrl, wsActions))\r\n);\r\n\r\nexport const initStore = (initialState = {}) =>\r\n  createStore(rootReducer, initialState, enhancer);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './components/app/app';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport { initStore } from './services/store';\r\n\r\nconst store = initStore(); \r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"feed-order-details_wrap__2j4F4\",\"order\":\"feed-order-details_order__zdtkQ\",\"status\":\"feed-order-details_status__3d1LV\",\"ingredient\":\"feed-order-details_ingredient__2JNJg\",\"imgPrew\":\"feed-order-details_imgPrew__24rFy\",\"img\":\"feed-order-details_img__Hza_V\",\"ingredients\":\"feed-order-details_ingredients__3VTlw\",\"row\":\"feed-order-details_row__g56-0\",\"footer\":\"feed-order-details_footer__3j0hc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"images\":\"images_images__1ls3R\",\"image\":\"images_image__2AZRE\",\"imgPrew\":\"images_imgPrew__JVoZW\",\"img\":\"images_img__o2d0V\",\"imgOverlay\":\"images_imgOverlay__KqBbb\",\"counter\":\"images_counter__1MxJ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__2Nehc\",\"nav\":\"header_nav__25B5O\",\"iconText\":\"header_iconText__2O7IC\",\"logo\":\"header_logo__2pKXs\",\"text_color_active\":\"header_text_color_active__-9NUp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order\":\"orders-feed_order__1MUXf\",\"row\":\"orders-feed_row__2j0ri\",\"price\":\"orders-feed_price__1ahSg\",\"link\":\"orders-feed_link__2pu2P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"productList\":\"burger-items_productList__1PJqf\",\"ingredients\":\"burger-items_ingredients__1Q2af\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"feed_wrap__1xSGf\",\"orders\":\"feed_orders__B7zih\",\"orderWrap\":\"feed_orderWrap__2dsLD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgerBlock\":\"burger-item_burgerBlock__Ezfde\",\"price\":\"burger-item_price__cVlGM\",\"link\":\"burger-item_link__1zdYZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel\":\"burger-components_panel__1ibRr\",\"componentList\":\"burger-components_componentList__1hl-w\",\"fullWidht\":\"burger-components_fullWidht__3wOQ8\",\"totalPrice\":\"burger-components_totalPrice__13B_0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__3q8D1\",\"title\":\"modal_title__1hdNE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"form_wrapper__2DB7-\",\"form\":\"form_form__3sqjm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"light\":\"order-details_light__BGKY7\",\"message\":\"order-details_message__bn66L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"profile_wrapper__1sBsY\",\"itemsProfile\":\"profile_itemsProfile__2_Sng\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"profile_button__5nTVD\",\"form\":\"profile_form__1SpUk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orders\":\"orders_orders__3_1bX\",\"orderWrap\":\"orders_orderWrap__1iKsS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"page-not-found_wrap__DqDeN\",\"link\":\"page-not-found_link__3jGuB\"};"],"sourceRoot":""}